{"version":3,"sources":["api/common.ts","api/streams.ts","components/CollapsableListItem.tsx","CollectionView.tsx","hooks/promise.ts","hooks/store.ts","services/persister.ts","api/markers.ts","api/collections.ts","actions/collection.ts","actions/profile.ts","api/profile.ts","hooks/profile.ts","CollectionsView.tsx","hooks/collections.ts","AppDrawer.tsx","AppBar.tsx","components/SnackbarHelper.tsx","services/entry.ts","api/entry.ts","actions/entry.ts","components/AppBarButton.tsx","actions/marker.ts","MarkerButton.tsx","hooks/callbacks.ts","EntryViewer.tsx","hooks/responsive.ts","components/SwipeableView.tsx","RouteManager.tsx","services/debounce.ts","actions/settings.ts","SettingsPage.tsx","EntryCard.tsx","services/store.ts","actions/stream.ts","components/Centre.tsx","components/ScrollVisibility.tsx","components/StickyHeader.tsx","StreamViewer.tsx","hooks/stream.ts","App.tsx","theme.ts","serviceWorker.ts","index.tsx"],"names":["feedlyQueryString","params","fixedCase","key","queryString","stringify","makeRequest","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","url","joiner","requestUrl","response","wrap","_context","prev","next","length","includes","concat","feedlyConfig","feedlyUrl","fetch","method","headers","Authorization","accessToken","sent","ok","abrupt","json","stop","this","_x","_x2","apply","arguments","defaultOptions","unreadOnly","getStream","streamId","type","options","_args","undefined","objectSpread","getAllId","userId","getSavedId","useStyles","makeStyles","@global",".nested-list *","paddingLeft","CollapsableListItem","props","_useState","useState","defaultOpen","_useState2","slicedToArray","open","setOpen","react","header","toggle","core_index_es","in","timeout","unmountOnExit","disablePadding","className","children","SubscriptionView","withRouter","button","onClick","history","push","feed","feedId","title","p","collection","id","icons_index_es","label","e","stopPropagation","feeds","map","s","executeOnce","execute","_len","keys","Array","_key","useEffect","updaters","currentStore","defaultStore","getStore","window","afterChange","event","store","prevStore","forEach","u","useStore","setStore","updater","addUpdater","index","indexOf","splice","removeUpdater","localForage","markersForOnline","save","value","setItem","JSON","saveEntry","entry","saveChildren","getItem","then","t0","Set","getChildKeys","t1","toConsumableArray","k","add","from","get","_ref2","_callee2","_context2","parse","call","_ref3","_callee3","parentKey","_context3","isArray","_x3","batchedLoad","_ref4","_callee4","storeKey","batchSize","i","results","_args4","_context4","Promise","all","slice","Math","min","reduce","defineProperty","_x4","load","_ref5","_callee5","_context5","_x5","loadStore","_ref6","_callee6","_context6","getCollections","updateCollections","shouldFetch","collections","updating","snackHelper","enqueueSnackbar","updateProfile","force","profile","useProfile","ManualEntry","categoryId","text","CollectionsView","categories","values","useCollections","c","CollectionView","AppDrawer","react_default","createElement","React","cloneElement","trigger","onClose","style","width","margin","variant","primary","createContext","pageActions","flex","display","flexDirection","AppBar","styles","position","color","SnackbarHelper","withSnackbar","getEntryByline","engagement","origin","relativeDate","Date","published","getEntry","entryId","entries","encodeURIComponent","updateEntry","AppBarButton","appBar","setAppBar","document","getElementById","ReactDOM","createPortal","updateMarkers","marker","endpoint","Content-Type","body","hitMarkerWhenOnline","updateUnread","items","unread","_args2","action","entryIds","updateSaved","saved","_args3","saveMarkersForOnline","getMarkersForOnline","_callee8","updateMarkersForOnline","_context8","_ref8","_callee7","promises","_context7","navigator","onLine","addEventListener","setUnread","setSaved","profileId","tagId","getSavedTag","tags","filter","on","off","EntryReadButton","toggleRead","useCallback","EntrySavedButton","some","endsWith","toggleSaved","useDoubleTap","callback","change","requiredTaps","delay","taps","setTimeout","useNTap","useOnScrollEnd","handler","handlers","isScrolling","setScrolling","_useState3","_useState4","scrollTimeout","setScrollTimeout","clearTimeout","onStart","onScroll","newScrollTimeout","onEnd","useOnScroll","root","maxWidth","marginLeft","marginRight","article img","article figure","isPhone","theme","useTheme","unstable_useMediaQuery","breakpoints","up","valueOf","useIsPhone","domElement","useRef","shouldMarkAsRead","settings","markOpenedAsRead","maybeMarkAsRead","ref","current","parentElement","scrollTo","scrollToTop","doubleTap","doubleTapToCloseArticles","goBack","getSelection","removeAllRanges","content","detail","summary","getEntryContent","article","subheader","component","dangerouslySetInnerHTML","__html","active","MarkerButton_EntryReadButton","MarkerButton_EntrySavedButton","SwipeableView","swipeableView","activeIndex","setActiveIndex","isNaN","Error","child","offsetLeft","selectedChild","element","closestDistance","Infinity","distance","abs","scrollLeft","onSwiped","scrollSnapType","overflowX","scrollbarWidth","flexShrink","scrollSnapAlign","scrollSnapStop","RouteSetter","Route","path","prefix","location","pathname","substr","setActive","activeSlide","setActiveSlide","slideIndex","routes","findIndex","r","SwipeableView_SwipeableView","n","height","overflow","paddingTop","render","RouteManager_RouteSetter","exact","debounce","f","time","args","defaultSettings","markScrolledAsRead","fontSize","darkMode","debouncedSaveSettings","localStorage","console","log","updateSettings","name","slider","SettingsPage","onSwitchChange","setting","target","onFontSizeChange","secondary","checked","onChange","lab_index_es","max","step","paper","cursor","card","maxHeight","read","tint","background","opacity","top","left","bottom","right","EntryCard","visualUrl","visual","getEntrySummary","tintGray","showingUnreadOnly","src","setAllStreams","allStream","_streamUpdate","uncategorizedId","savedId","entryUpdate","streamUpdate","lastFetched","now","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","category","oldStream","streams","err","return","_arr","_i","updateStreams","stream","justifyContent","Centre","ScrollVisibility","elementRef","scrollContainer","setScrollContainer","scrollHandler","setScrollHandler","_useState5","_useState6","above","setAbove","removeEventListener","debounced","newAbove","container","elementRect","getBoundingClientRect","containerRect","isAbove","getContainer","passive","rootRef","stickyHeader","StickyHeader","rest","objectWithoutProperties","assign","loadingButton","loader","marginBottom","zIndex","MarkEntryAsRead","startsWith","t","useStream","StreamViewer_EntriesViewer","EntriesViewer","loading","suitableEntries","useMemo","readProgress","spacing","justify","ScrollVisibility_ScrollVisibility","visible","item","lg","md","sm","xs","StreamViewer_MarkEntryAsRead","Fragment","disabled","control","StreamViewer","EntryViewer","App","createMuiTheme","palette","main","typography","BrowserRouter","core_styles","build","RouteManager","Boolean","hostname","match","loadSettings","src_App","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.66249b17.chunk.js","sourcesContent":["import queryString from \"querystring\";\nimport feedlyConfig from '../feedly.json';\n\nconst bypassCorsUrl = 'https://cors-anywhere.herokuapp.com/';\n\nexport const feedlyQueryString = (params: Object): string => {\n    const fixedCase = {};\n    for (const key in params || {}) {\n        fixedCase[key] = params[key];\n    }\n\n    return queryString.stringify(fixedCase);\n}\n\nexport const makeRequest = async <T>(url: string, params?: Object): Promise<T> => {\n    const queryString = feedlyQueryString(params);\n    const joiner = queryString.length === 0\n        ? ''\n        : url.includes('?')\n            ? '&'\n            : '?';\n\n    const requestUrl = `${feedlyConfig.feedlyUrl}${url}${joiner}${queryString}`;\n\n    // TODO: Use a custom cors proxy, this should not be in production.\n    const response = await fetch(`${bypassCorsUrl}${requestUrl}`, {\n        method: 'GET',\n        headers: {\n            'Authorization': `OAuth ${feedlyConfig.accessToken}`\n        }\n    });\n\n    // Make sure error handling is triggered if the response status is not ok.\n    if (!response.ok)\n        throw response;\n\n    return response.json();\n}\n\nexport const makePostRequest = (endpoint: string, params: Object) => {\n    return fetch(`${bypassCorsUrl}${feedlyConfig.feedlyUrl}${endpoint}`, {\n        method: 'POST',\n        headers: {\n            'Authorization': `OAuth ${feedlyConfig.accessToken}`,\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(params)\n    });\n}","import { Stream } from '../model/stream';\nimport { makeRequest } from './common';\nconst endpoint = '/streams'\n\ninterface StreamRequestOptions {\n    count?: number;\n    ranked?: 'oldest' | 'newest';\n    unreadOnly?: boolean;\n    newerThan?: number;\n    continuation?: string;\n}\n\nconst defaultOptions = {\n    unreadOnly: true,\n}\n\nexport const getStream = async (streamId: string, type: 'contents' | 'id' = 'contents', options?: StreamRequestOptions): Promise<Stream> => {\n    return makeRequest<Stream>(`${endpoint}/${type}?streamId=${streamId}`, { ...defaultOptions, ...options });\n}\n\nexport const getAllStreams = async (userId: string, unreadOnly: boolean = true): Promise<Stream> => {\n    return getStream(getAllId(userId), 'contents', { unreadOnly });\n}\n\nexport const getAllId = (userId: string) => `user/${userId}/category/global.all`;\n\nexport const getUncategorizedId = (userId: string) => {\n    return `user/${userId}/category/global.uncategorized`;\n}\n\nexport const getSavedId = (userId: string) => `user/${userId}/tag/global.saved`;","import { Collapse, List, ListItem } from '@material-ui/core';\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles(({\n    \"@global\": {\n        \".nested-list *\": {\n            paddingLeft: '40px'\n        }\n    }\n}));\n\ninterface Props {\n    defaultOpen?: boolean;\n    children?: React.ReactNode[] | React.ReactNode;\n    header: (props: { open: boolean, toggle: () => void }) => JSX.Element;\n}\n\nexport default (props: Props) => {\n    useStyles();\n\n    const [open, setOpen] = useState(props.defaultOpen);\n    return <>\n        {props.header({ open, toggle: () => setOpen(!open) })}\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <List disablePadding className=\"nested-list\">\n                {props.children}\n            </List>\n        </Collapse>\n    </>;\n}","import { ExpansionPanel, ExpansionPanelDetails, ExpansionPanelSummary, ListItem, ListItemText, ListItemIcon } from '@material-ui/core';\nimport { ExpandMore, RssFeed, ExpandLess } from '@material-ui/icons';\nimport * as React from 'react';\nimport CollapsableListItem from './components/CollapsableListItem';\nimport { Subscription } from './model/subscription';\nimport { withRouter, RouteComponentProps } from 'react-router';\nimport { Collection, Feed } from './model/collection';\n\ninterface Props extends RouteComponentProps<{}> {\n    collection: Collection;\n}\n\n\nconst SubscriptionView = withRouter((props: { feed: Feed } & RouteComponentProps<any>) => {\n\n    return <ListItem button onClick={() => props.history.push(`/stream/${props.feed.feedId}`)}>\n        <ListItemText>\n            {props.feed.title}\n        </ListItemText>\n    </ListItem>\n})\n\nexport default withRouter((props: Props) => {\n    return <CollapsableListItem\n        defaultOpen={true}\n        header={p => <ListItem button onClick={() => props.history.push(`/stream/${props.collection.id}`)}>\n            <ListItemIcon>\n                <RssFeed />\n            </ListItemIcon>\n            <ListItemText>{props.collection.label}</ListItemText>\n            <div onClick={e => {\n                p.toggle();\n                e.stopPropagation();\n            }}>\n                {p.open ? <ExpandLess /> : <ExpandMore />}\n            </div>\n        </ListItem>}>\n        {props.collection.feeds.map(s => <SubscriptionView key={s.id} feed={s} />)}\n    </CollapsableListItem>\n})","import { useEffect, useState } from \"react\";\nimport { useForeUpdate } from \"./effects\";\n\nexport const useResult = <T>(promise: Promise<T>) => {\n    const [result, setResult] = useState(undefined);\n\n    useEffect(() => {\n        if (result) return;\n        \n        promise.then(setResult);\n    });\n\n    return result;\n}\n\nexport const executeOnce = <T>(execute: (...args) => Promise<T>, ...keys) => {\n    useEffect(() => {\n        execute(...keys);\n    }, [...keys]);\n}\n\ninterface Cache<T> {\n    updating: boolean;\n    lastArgs: any[];\n    state: T;\n}\n\nconst elementsChanged = (l1: any[], l2: any[]) => l1.length !== l2.length || l1.some((item, index) => l2[index] !== item);\nexport const makeUpdatableSharedCache = <T>(fetcher: (...args) => Promise<T>, initialValue?: T) => {\n    const cache: Cache<T> = {\n        updating: false,\n        lastArgs: [],\n        state: initialValue\n    };\n\n    const updaters: (() => void)[] = [];\n    const update = async (...args) => {\n        if (cache.updating) return;\n\n        const result = await fetcher(...args);\n        cache.state = result;\n        updaters.forEach(u => u());\n\n        cache.lastArgs = args;\n        cache.updating = false;\n    };\n\n    return (...args): T => {\n        // If we don't have any data, or our args have changed\n        if (!cache.state\n            || elementsChanged(args, cache.lastArgs)) {\n            update(...args)\n        }\n\n        // Manage registering for update\n        const forceUpdate = useForeUpdate();\n        useEffect(() => {\n            updaters.push(forceUpdate);\n            return () => {\n                const index = updaters.indexOf(forceUpdate);\n                updaters.splice(index, 1);\n            };\n        })\n\n        return cache.state;\n    };\n\n}","import { useEffect, useState } from 'react';\nimport { afterChange, store as defaultStore, Store } from 'react-recollect';\nimport { makeUpdatableSharedCache } from './promise';\n\ntype Updater = (store: Store) => void;\n\nconst updaters: Updater[] = [];\nconst addUpdater = (updater: Updater) => {\n    updaters.push(updater);\n    return updater;\n}\n\nconst removeUpdater = (updater: Updater) => {\n    const index = updaters.indexOf(updater);\n    updaters.splice(index, 1);\n}\n\nlet currentStore = defaultStore;\nexport const getStore = () => currentStore;\n(window as any).getStore = getStore;\n\nafterChange(event => {\n    if (event.store === event.prevStore)\n      return;\n\n    currentStore = event.store;\n    updaters.forEach(u => u(event.store));\n});\n\nexport const useStore = () => {\n    const [store, setStore] = useState(defaultStore);\n\n    useEffect(() => {\n        const updater = addUpdater(setStore);\n        return () => {\n            removeUpdater(updater);\n        };\n    });\n\n    return store;\n}\n\nexport const makeStoreCache = <T>(fetcher: (store: Store) => T | Promise<T>, onFetched: (store: Store, value: T) => void) => {\n    const storeFetcher = async () => {\n        const result = await fetcher(currentStore);\n        onFetched(currentStore, result);\n        return result;\n    };\n\n    const useCache = makeUpdatableSharedCache(storeFetcher);\n    return (lastUpdate?: number) => {\n        const cached = useCache(lastUpdate);\n        return cached;\n    }\n}\n\nexport const isUpdating = (id: string) => currentStore.updating[id];","import localForage from 'localforage';\nimport { Store } from 'react-recollect';\nimport { getStore } from '../hooks/store';\nimport { Entry } from '../model/entry';\n\n(window as any)['localForage'] = localForage;\n\nexport const entriesPrefix: keyof Store = 'entries';\n\nexport const save = (key: string, value: object) => {\n    return localForage.setItem(key, JSON.stringify(value));\n}\n\nexport const saveEntry = (entry: Entry) => {\n    return save(`${entriesPrefix}.${entry.id}`, entry);\n}\n\nexport const saveChildren = (key: string, value: object) => {\n    return localForage.getItem<string[]>(key)\n        .then(async keys => new Set(await getChildKeys(key)))\n        .then(keys => [\n            ...Object.keys(value).map(k => {\n                keys.add(k);\n                return save(`${key}.${k}`, value[k])\n            }),\n            save(key, Array.from(keys))\n        ]);\n};\n\nexport const get = async (key: string) => JSON.parse(await localForage.getItem(key));\n\nconst getChildKeys = async (parentKey: string) => {\n    const keys = await get(parentKey);\n    return Array.isArray(keys) ? keys : [];\n};\n\nconst batchedLoad = async (storeKey: keyof Store, batchSize = 20) => {\n    const keys = await getChildKeys(storeKey);\n    for (let i = 0; i < keys.length; i += batchSize) {\n        const results = await Promise.all(keys.slice(i, Math.min(i + batchSize, keys.length))\n            .map(key => get(`${storeKey}.${key}`)));\n        getStore()[storeKey] = {\n            ...getStore()[storeKey],\n            ...results.reduce((prev, next) => ({ ...prev, [(next as any).id]: next }), {})\n        };\n    }\n}\n\nexport const load = async (storeKey: keyof Store) => {\n    const value = await get(storeKey);\n    getStore[storeKey] = value;\n    return value;\n}\n\nexport const loadEntry = (id: string): Promise<Entry> => get(`${entriesPrefix}.${id}`) as Promise<Entry>;\n\nexport const loadStore = async () => {\n    await Promise.all([\n        batchedLoad('entries'),\n        batchedLoad('streams')\n    ]);\n}","import { Marker } from \"../model/markers\";\nimport { makePostRequest } from \"./common\";\nimport { Entry } from \"../model/entry\";\nimport { get, save } from \"../services/persister\";\n\nconst endpoint = '/markers';\n\nexport const updateMarkers = async (marker: Marker) => {\n    try {\n        await makePostRequest(endpoint, marker);\n    } catch (error) {\n        await hitMarkerWhenOnline(marker);\n    }\n}\n\nexport const updateUnread = async (items: (Entry | Entry[]), unread: boolean = true) => {\n    items = Array.isArray(items) ? items : [items];\n\n    const marker: Marker = {\n        type: 'entries',\n        action: unread ? 'keepUnread' : 'markAsRead',\n        entryIds: items.map(i => i.id)\n    };\n    await updateMarkers(marker);\n};\n\nexport const updateSaved = async (entry: Entry, saved: boolean = true) => {\n    const marker: Marker = {\n        type: 'entries',\n        action: saved ? 'markAsSaved' : 'markAsUnsaved',\n        entryIds: [entry.id]\n    };\n    await updateMarkers(marker);\n}\n\n\nconst markerKeysName = 'markers-for-online';\nlet markersForOnline: Marker[];\n\nconst saveMarkersForOnline = async () => {\n    await save(markerKeysName, markersForOnline);\n}\n\nexport const hitMarkerWhenOnline = async (marker: Marker) => {\n    if (!markersForOnline)\n        markersForOnline = await getMarkersForOnline();\n\n    markersForOnline.push(marker);\n    await saveMarkersForOnline();\n}\n\nexport const getMarkersForOnline = async () => {\n    return await get(markerKeysName) as any || [];\n}\n\n(async () => {\n    const updateMarkersForOnline =  async () => {\n        const promises = markersForOnline.map(updateMarkers);\n        markersForOnline.length = 0;\n        await saveMarkersForOnline();\n        await Promise.all(promises);\n    };\n\n    markersForOnline = await getMarkersForOnline();\n    if (navigator.onLine)\n      await updateMarkersForOnline();\n\n    window.addEventListener('online', updateMarkersForOnline);\n})();","import { Collection } from \"../model/collection\";\nimport { makeRequest } from \"./common\";\n\nconst endpoint = '/collections';\n\nexport const getCollections = async (): Promise<Collection[]> => {\n    return makeRequest<Collection[]>(`${endpoint}/`);\n}","import { getStore } from \"../hooks/store\";\nimport { updateProfile } from \"./profile\";\nimport { getEntry } from \"../api/entry\";\nimport { load, save } from \"../services/persister\";\nimport { getCollections } from \"../api/collections\";\n\nconst updatingName = 'collections';\nexport const updateCollections = async () => {\n    if (getStore().updating[updatingName]) return;\n\n    getStore().updating[updatingName] = true;\n\n    // Only fetch once per session.\n    const shouldFetch = !getStore().collections;\n\n    let collections = await load('collections');\n    if (collections)\n        getStore().collections = collections;\n\n    // Update from network.\n    if (shouldFetch) {\n        try {\n            collections = await getCollections();\n            getStore().collections = collections;\n\n            await save('collections', collections)\n        } catch {\n            window.snackHelper.enqueueSnackbar('Unable to fetch collections. You appear to be offline.');\n            getStore().collections = [];\n        }\n    }\n\n    delete getStore().updating[updatingName];\n}","import { Store } from \"react-recollect\";\nimport { getProfile } from \"../api/profile\";\nimport { getStore } from \"../hooks/store\";\nimport { save, load } from \"../services/persister\";\n\nexport const updateProfile = async (force: boolean = false) => {\n    if (getStore().updating.profile) return;\n\n    getStore().updating.profile = true;\n\n    // If we aren't forcing the load, try and load the profile from disk.\n    if (!force)\n        getStore().profile = await load('profile');\n\n    // If the load failed, load the profile from the network and save to disk.\n    if (!getStore().profile) {\n        getStore().profile = await getProfile();\n        await save('profile', getStore().profile);\n    }\n\n    getStore().updating.profile = false;\n}","import { makeRequest } from './common';\nimport { Profile } from '../model/profile';\nconst profileUrl = '/profile';\n\nexport const getProfile = () => {\n    return makeRequest<Profile>(profileUrl);\n}","import { Profile } from \"../model/profile\";\nimport { useStore, makeStoreCache } from \"./store\";\nimport { executeOnce } from \"./promise\";\nimport { getProfile } from \"../api/profile\";\nimport { useEffect } from \"react\";\nimport { updateProfile } from \"../actions/profile\";\n\nexport const useProfile = (): Profile => {\n    const store = useStore();\n\n    useEffect(() => {\n        if (store.profile) return;\n        updateProfile();\n    }, []);\n\n    return store.profile;\n}","import * as React from 'react';\nimport CollectionView from './CollectionView';\nimport { useCollections } from './hooks/collections';\nimport { ListItem, ListItemText, ListItemIcon } from '@material-ui/core';\nimport { RssFeed } from '@material-ui/icons';\nimport { withRouter, RouteComponentProps } from 'react-router';\nimport { useProfile } from './hooks/profile';\nimport { getAllId, getSavedId } from './api/streams';\nimport { useStore } from './hooks/store';\n\nconst ManualEntry = withRouter((props: RouteComponentProps & { text: string, categoryId: string }) => {\n    return <ListItem onClick={() => props.history.push(`/stream/${props.categoryId}`)} button>\n        <ListItemIcon>\n            <RssFeed />\n        </ListItemIcon>\n        <ListItemText>{props.text}</ListItemText>\n    </ListItem>;\n});\n\nexport default (props) => {\n    const profile = useProfile();\n    const categories = useCollections();\n\n    return <>\n        <ManualEntry text=\"All\" categoryId={getAllId(profile && profile.id)} />\n        <ManualEntry text=\"Saved\" categoryId={getSavedId(profile && profile.id)} />\n        {categories.map(c => <CollectionView collection={c} key={c.id} />)}\n    </>;\n}","import { useEffect, useState } from \"react\";\nimport { getSubscriptions } from \"../api/subscription\";\nimport { Category } from \"../model/category\";\nimport { Subscription } from \"../model/subscription\";\nimport { useStore } from \"./store\";\nimport { executeOnce } from \"./promise\";\nimport { Collection } from \"../model/collection\";\nimport { getCollections } from \"../api/collections\";\nimport { updateCollections } from \"../actions/collection\";\n\nexport const useCollections = (): Collection[] => {\n    const store = useStore();\n\n    // If we haven't cached the collections, get them from the internet.\n    executeOnce(updateCollections);\n\n    return store.collections\n        ? Object.values(store.collections)\n        : [];\n}","import { Drawer, List, ListItem, ListItemIcon, ListItemText, Typography } from \"@material-ui/core\";\nimport { Person } from '@material-ui/icons';\nimport React, { useState } from 'react';\nimport CategoriesView from \"./CollectionsView\";\n\nexport default (props: { trigger: JSX.Element }) => {\n    const [open, setOpen] = useState(false);\n\n    return <div>\n        {React.cloneElement(props.trigger, { onClick: () => setOpen(true) })}\n        <Drawer open={open} onClose={() => setOpen(false)}>\n            <div style={{ width: '250px', margin: '10px' }}>\n                <Typography variant='h5'>\n                    Progrssive Reader\n                </Typography>\n                <List>\n                    <ListItem button>\n                        <ListItemIcon>\n                            <Person />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Login\" />\n                    </ListItem>\n                </List>\n                <CategoriesView/>\n            </div>\n        </Drawer>\n    </div>;\n}","import React, { useState, useEffect } from 'react';\nimport { Toolbar, AppBar, IconButton, Typography } from '@material-ui/core';\nimport { Menu } from '@material-ui/icons';\nimport AppDrawer from './AppDrawer';\nimport { makeStyles } from '@material-ui/styles';\n\nexport const AppBarContext: React.Context<React.Ref<any>> = React.createContext(undefined);\n\nconst useStyles = makeStyles({\n    pageActions: {\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'row-reverse',\n        width: '100%'\n    }\n})\n\nexport default (props) => {\n    const styles = useStyles();\n\n    return <AppBar position=\"static\" color=\"primary\">\n            <Toolbar>\n                <AppDrawer trigger={\n                    <IconButton>\n                        <Menu />\n                    </IconButton>} />\n                <Typography variant=\"title\">Progrssive</Typography>\n                <div className={styles.pageActions} id=\"app-bar-button-container\">\n\n                </div>\n            </Toolbar>\n        </AppBar>;\n}","import { withSnackbar } from \"notistack\";\nimport * as React from 'react';\nimport \"../types/Window\";\n\nexport const SnackbarHelper = withSnackbar((props) => {\n    window.snackHelper = props;\n    return null;\n});","import { Entry } from \"../model/entry\";\nimport relativeDate from 'tiny-relative-date';\nimport { getSavedId } from \"../api/streams\";\n\nexport const getEntryContent = (entry: Entry) => {\n    const detail = entry.content || entry.summary;\n    return detail && detail.content;\n}\n\nexport const getEntrySummary = (entry: Entry) => entry.summary && entry.summary.content;\n\nexport const getEntryByline = (entry: Entry) => `${entry.engagement ? entry.engagement + ' ' : ''}${entry.origin && entry.origin.title} / ${relativeDate(new Date(entry.published))}`;\n\nexport const getEntryVisualUrl = (entry: Entry) => entry.visual && entry.visual.url;\n\nexport const isSaved = (entry: Entry) => entry.tags && entry.tags.some(e => e.id.endsWith('global.saved'));","import { makeRequest } from \"./common\";\nimport { Entry } from \"../model/entry\";\n\nexport const getEntry = async (entryId: string) => {\n    const entries = await makeRequest<Entry[]>(`/entries/${encodeURIComponent(entryId)}`);\n    return entries[0];\n}","import { getStore } from \"../hooks/store\";\nimport { getEntry } from \"../api/entry\";\nimport { loadEntry } from \"../services/persister\";\n\nexport const updateEntry = async (entryId: string, force: boolean = false) => {\n    if (getStore().updating[entryId]) return;\n    getStore().updating[entryId] = false;\n\n    // If we aren't forcing network, try and load the entry from disk.\n    // Fallback to fetching from the network.\n    const entry = (!force && await loadEntry(entryId))\n        || await getEntry(entryId);\n        \n    const store = getStore();\n    store.entries = {\n        ...store.entries,\n        [entryId]: entry\n    };\n\n    delete store.updating[entryId];\n}","import ReactDOM from \"react-dom\";\nimport React, { useState, useEffect } from 'react';\n\nexport default (props: { children: React.ReactNode }) => {\n    const [appBar, setAppBar] = useState(undefined);\n\n    useEffect(() => {\n        setAppBar(document.getElementById('app-bar-button-container'));\n    }, []);\n\n    if (!appBar) return null;\n    \n    return ReactDOM.createPortal(props.children, appBar);\n}","import { Entry } from \"../model/entry\";\nimport { updateUnread, updateSaved } from \"../api/markers\";\nimport { getSavedId as getSavedTag } from \"../api/streams\";\nimport { saveEntry } from \"../services/persister\";\n\nexport const setUnread = async (entry: Entry, unread: boolean) => {\n    entry.unread = unread;\n    await updateUnread(entry, entry.unread);\n    await saveEntry(entry);\n}\n\nexport const setSaved = async (entry: Entry, saved: boolean, profileId: string) => {\n    const tagId = getSavedTag(profileId);\n    if (!saved) {\n        entry.tags = entry.tags.filter(e => e.id !== tagId);\n    } else {\n        entry.tags = [...(entry.tags || []), {\n            id: tagId,\n            label: 'Saved For Later'\n        }];\n    }\n\n    await updateSaved(entry, saved);\n    await saveEntry(entry);\n}","import * as React from 'react';\nimport { Button, IconButton } from '@material-ui/core';\nimport { Entry } from './model/entry';\nimport { RemoveRedEye, RemoveCircleOutline, StarSharp, StarOutlined, StarBorderOutlined, Star } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/styles';\nimport { useCallback } from 'react';\nimport { isSaved } from './services/entry';\nimport { useProfile } from './hooks/profile';\nimport { setUnread, setSaved } from './actions/marker';\n\nconst useStyles = makeStyles({\n    on: {\n        color: 'white !important'\n    },\n    off: {\n        color: 'gray !important'\n    }\n})\n\ninterface MarkerButtonProps {\n    entry: Entry;\n}\n\nexport const EntryReadButton = (props: MarkerButtonProps) => {\n    const styles = useStyles();\n    const toggleRead = useCallback(() => {\n        setUnread(props.entry, !props.entry.unread);\n    }, [props.entry, props.entry.unread]);\n\n    return <IconButton\n        className={props.entry.unread ? styles.on : styles.off}\n        onClick={toggleRead}>\n        <RemoveRedEye/>\n    </IconButton>;\n}\n\nexport const EntrySavedButton = (props: MarkerButtonProps) => {\n    const styles = useStyles();\n    const profile = useProfile();\n    const saved = isSaved(props.entry);\n    \n    const toggleSaved = useCallback(() => {\n        setSaved(props.entry, !saved, profile.id);\n    }, [props.entry, saved]);\n    return <IconButton className={styles.on}\n        onClick={toggleSaved}>\n        {saved\n            ? <Star/>\n            : <StarBorderOutlined/>}\n    </IconButton>\n}","import * as React from 'react';\nimport { useCallback, useState } from 'react';\n\nexport const useNTap = <Type>(callback: (...args) => void, change: [], requiredTaps = 2, delay = 200) => {\n    // Should be fine here. If we rerender a double tap should be cancelled anyway.\n    let taps = 0;\n    const memoized = useCallback((...args) => {\n        // Increment number of taps\n        taps++;\n        // After timeout, we don't care about this tap.\n        setTimeout(() => taps--, delay);\n\n        // If we've tapped enough times, fire the callback.\n        if (taps >= requiredTaps) callback(...args);\n    }, [...change, requiredTaps, delay]);\n\n    return memoized;\n}\n\nexport const useDoubleTap = (callback: (...args) => void, change: [], delay = 200) => useNTap(callback, change, 2, delay);\n\ninterface ScrollEvents {\n    onStart?: () => void;\n    onEnd?: () => void;\n    onScroll?: () => void;\n}\n\nexport const useOnScroll = (handlers: ScrollEvents) => {\n    const [isScrolling, setScrolling ] = useState(false);\n    const [scrollTimeout, setScrollTimeout] = useState(undefined);\n\n    const memoized = useCallback((e) => {\n        // Reset timeout.\n        clearTimeout(scrollTimeout);\n\n        if (!isScrolling) {\n            setScrolling(true);\n            handlers.onStart && handlers.onStart();\n        }\n\n        handlers.onScroll && handlers.onScroll();\n\n        const newScrollTimeout = setTimeout(() => {\n            setScrolling(false);\n            handlers.onEnd && handlers.onEnd();\n        }, 100);\n        setScrollTimeout(newScrollTimeout);\n    }, [handlers, isScrolling, scrollTimeout]);\n\n    return memoized;\n};\n\nexport const useOnScrollEnd = (handler: () => void) => {\n    return useOnScroll({ onEnd: handler });\n};","import { Card, CardContent, CardHeader, CircularProgress, Typography, Fab } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport * as React from 'react';\nimport { useEffect, useRef } from 'react';\nimport { useIsPhone } from \"./hooks/responsive\";\nimport { useEntry } from \"./hooks/stream\";\nimport { getEntryByline, getEntryContent } from \"./services/entry\";\nimport { getStore, useStore } from \"./hooks/store\";\nimport { updateEntry } from \"./actions/entry\";\nimport AppBarButton from \"./components/AppBarButton\";\nimport { EntryReadButton, EntrySavedButton } from \"./MarkerButton\";\nimport { Add } from \"@material-ui/icons\";\nimport { Entry } from \"./model/entry\";\nimport { setUnread } from \"./actions/marker\";\nimport { useDoubleTap } from \"./hooks/callbacks\";\nimport { withRouter, RouteComponentProps } from \"react-router\";\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: '1000px',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n    },\n    '@global': {\n        'article img': {\n            width: '100%'\n        },\n        'article figure': {\n            margin: 0\n        }\n    }\n});\n\nconst maybeMarkAsRead = (entry: Entry) => {\n    const store = useStore();\n    const shouldMarkAsRead = store.settings.markOpenedAsRead;\n\n    useEffect(() => {\n        if (!entry || !entry.unread || !shouldMarkAsRead) return;\n\n        setUnread(entry, false);\n    }, [entry && entry.id, shouldMarkAsRead]);\n}\n\nconst scrollToTop = (entry: Entry, ref: React.MutableRefObject<any>) => {\n    useEffect(() => {\n        if (!entry || !ref || !ref.current) return;\n\n        ref.current.parentElement.scrollTo(0, 0);\n    }, [entry && entry.id]);\n}\n\ninterface Props extends RouteComponentProps<{}> {\n    id: string,\n    active: boolean\n}\n\nexport default withRouter((props: Props) => {\n    const store = useStore();\n\n    const styles = useStyles();\n    const isPhone = useIsPhone();\n    const domElement = useRef(null);\n\n    const entry = store.entries[props.id];\n\n    useEffect(() => {\n        if (entry || !props.id) return;\n        updateEntry(props.id);\n    }, [props.id]);\n\n    maybeMarkAsRead(entry);\n    scrollToTop(entry, domElement);\n\n    const doubleTap = useDoubleTap((event) => {\n        if (!store.settings.doubleTapToCloseArticles)\n            return;\n\n        props.history.goBack();\n        event.stopPropagation();\n        // Clear potential accidental selection.\n        document.getSelection().removeAllRanges();\n    }, []);\n\n    if (!entry)\n        return <CircularProgress />;\n\n    const content = getEntryContent(entry);\n\n    const article = <>\n        <CardHeader\n            title={entry.title}\n            subheader={getEntryByline(entry)} />\n        {content && <CardContent>\n            <Typography component='small'>\n                <div dangerouslySetInnerHTML={{ __html: content }}></div>\n            </Typography>\n        </CardContent>}\n    </>;\n\n    return <article className={styles.root} ref={domElement} onClick={doubleTap}>\n        {isPhone\n            ? article\n            : <Card>{article}</Card>}\n        {props.active && <>\n            <AppBarButton>\n                <EntryReadButton entry={entry} />\n            </AppBarButton>\n            <AppBarButton>\n                <EntrySavedButton entry={entry} />\n            </AppBarButton>\n        </>}\n    </article>;\n});","import { Theme } from \"@material-ui/core\";\nimport { unstable_useMediaQuery } from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/styles\";\n\nexport const useIsPhone = () => {\n    const theme = useTheme() as Theme;\n    if (!theme) return false;\n    const query = unstable_useMediaQuery(theme.breakpoints.up('md'));\n\n    return !query.valueOf();\n}","import * as React from 'react'\nimport { useEffect, useCallback, useRef, useState } from 'react';\nimport { useOnScrollEnd } from '../hooks/callbacks';\n\ninterface Props {\n    children: React.ReactNode[] | React.ReactNode;\n\n    onSwiped?: (selectedIndex: number) => void;\n    activeIndex?: number;\n}\n\nexport const SwipeableView = (props: Props) => {\n    const children = Array.isArray(props.children) ? props.children : [props.children];\n    \n    const swipeableView = useRef(null);\n    const [activeIndex, setActiveIndex] = useState(props.activeIndex || 0);\n    \n    // Update active index based on props.activeIndex.\n    useEffect(() => {\n        if (isNaN(props.activeIndex) || activeIndex === props.activeIndex)\n          return;\n\n        if (!swipeableView.current)\n          return;\n\n        if (props.activeIndex < 0 || swipeableView.current && props.activeIndex > swipeableView.current.children.length)\n          throw new Error(`Index ${props.activeIndex} out of range!`);\n\n        const child = swipeableView.current.children[props.activeIndex];\n        swipeableView.current.scrollTo(child.offsetLeft, 0);\n\n        setActiveIndex(props.activeIndex);\n    }, [props.activeIndex])\n\n    const onScroll = useOnScrollEnd(() => {\n        const element = swipeableView.current;\n\n        let selectedChild;\n        let closestDistance = Infinity;\n\n        for (let i = 0; i < element.children.length; ++i) {\n            const child: any = element.children[i];\n            const distance = Math.abs(element.scrollLeft - child.offsetLeft);\n            if (distance < closestDistance) {\n                closestDistance = distance;\n                selectedChild = i;\n            }\n        }\n\n        if (selectedChild !== undefined && selectedChild !== activeIndex) {\n            setActiveIndex(selectedChild);\n            props.onSwiped && props.onSwiped(selectedChild);\n        }\n    });\n\n    return <div style={{\n        scrollSnapType: 'x mandatory',\n        overflowX: 'scroll',\n        display: 'flex',\n        scrollbarWidth: 'none',\n    }}\n        onScroll={onScroll}\n        ref={swipeableView}>\n        {children.map((c, i) => <div key={i} style={{\n            flexShrink: 0,\n            scrollSnapAlign: 'start',\n            scrollSnapStop: 'always'\n        } as any}>\n            {c}\n        </div>)}\n    </div>\n}","import * as React from 'react';\nimport { useCallback, useState } from 'react';\nimport { Route, RouteComponentProps, withRouter, Switch } from 'react-router';\nimport { SwipeableView } from './components/SwipeableView';\nimport { useStore } from './hooks/store';\n\nexport interface AppRoute {\n    prefix: string;\n    render: (id?: string, active?: boolean) => React.ReactNode;\n}\n\ninterface Props extends RouteComponentProps<any> {\n    routes: AppRoute[];\n}\n\ninterface RouteSetterProps {\n    prefix: string;\n    setActive: (prefix: string, id: string) => void;\n}\n\nconst RouteSetter = (props: RouteSetterProps) => {\n    return <Route path={`${props.prefix}:id*`}\n        component={(p: RouteComponentProps) => {\n            const location = p.location.pathname;\n            const id = location.substr(props.prefix.length);\n\n            props.setActive(props.prefix, id);\n            return null;\n        }}>\n    </Route>\n}\n\nexport default withRouter((props: Props) => {\n    const store = useStore();\n    const [activeSlide, setActiveSlide] = useState(0);\n\n    const setActive = useCallback((prefix: string, id: string) => {\n        store.current[prefix] = id;\n\n        const slideIndex = props.routes.findIndex(r => r.prefix === prefix);\n        setActiveSlide(slideIndex);\n    }, [props.routes, setActiveSlide]);\n\n    return <>\n        <SwipeableView\n            activeIndex={activeSlide}\n            onSwiped={(n) => {\n            if (n === activeSlide) return;\n\n            const prefix = props.routes[n].prefix;\n            const path = store.current[prefix];\n\n            setActiveSlide((n + 1) % 2);\n            props.history.push(`${prefix}${path || ''}`)\n        }}>\n            {props.routes.map((r, i) => <div\n                style={{ width: '100vw', height: '90vh', overflow: 'hidden auto', paddingTop: '10px' }}\n                key={r.prefix}>\n                {r.render(store.current[r.prefix], activeSlide === i)}\n            </div>)}\n        </SwipeableView>\n        {props.routes.map(r => <RouteSetter key={r.prefix} prefix={r.prefix} setActive={setActive}/>)}\n        <Route path='/' exact={true} component={() => {\n            setActiveSlide(1);\n            return null;\n        }}/>\n    </>\n});","export const debounce = (f: (...args) => void, time: number) => {\n    let timeout;\n\n    const invoke = (...args) => {\n        clearTimeout(timeout);\n        timeout = setTimeout(() => f(...args), time);\n    }\n    \n    return invoke;\n}","import { Settings } from \"../types/RecollectStore\";\nimport { getStore } from \"../hooks/store\";\nimport { debounce } from \"../services/debounce\";\n\nconst defaultSettings: Settings = {\n    markOpenedAsRead: true,\n    markScrolledAsRead: true,\n    doubleTapToCloseArticles: true,\n    unreadOnly: true,\n    fontSize: 3,\n    darkMode: false\n}\n\nconst saveSettings = (settings: Settings) => {\n    window.localStorage.setItem('settings', JSON.stringify(settings));\n    console.log('saved settings!');\n}\nconst debouncedSaveSettings = debounce(saveSettings, 1000);\n\nexport const updateSettings = <T extends keyof Settings>(name: T, value: Settings[T]) => {\n    getStore().settings[name] = value;\n    debouncedSaveSettings(getStore().settings);\n}\n\nexport const loadSettings = () => {\n    const json = window.localStorage.getItem('settings');\n    return json ? JSON.parse(json) as Settings : defaultSettings;\n}","import * as React from 'react';\nimport { List, ListItem, ListItemText, ListItemSecondaryAction, Switch, Divider } from '@material-ui/core';\nimport { Slider } from '@material-ui/lab';\nimport { makeStyles } from '@material-ui/styles';\nimport { getStore, useStore } from './hooks/store';\nimport { updateSettings } from './actions/settings';\nimport { useCallback } from 'react';\n\nconst useStyles = makeStyles({\n    slider: {\n        width: '48px !important'\n    }\n});\n\nexport default (props) => {\n    const styles = useStyles();\n    const store = useStore();\n\n    const onSwitchChange = React.useCallback((e: React.ChangeEvent<HTMLInputElement>, value: boolean) => {\n        const setting = e.target['name'];\n        updateSettings(setting as any, value)\n    }, []);\n\n    const onFontSizeChange = useCallback((e: React.ChangeEvent<{}>, value: any) => {\n        updateSettings('fontSize', value);\n    }, []);\n\n    return <div>\n        <List>\n            <ListItem>\n                <ListItemText\n                    primary='Read opened articles'\n                    secondary='Marks articles as read when you open them.' />\n                <ListItemSecondaryAction>\n                    <Switch\n                        checked={store.settings.markOpenedAsRead}\n                        name='markOpenedAsRead'\n                        onChange={onSwitchChange} />\n                </ListItemSecondaryAction>\n            </ListItem>\n            <ListItem>\n                <ListItemText\n                    primary='Auto mark as read'\n                    secondary='Marks articles as read when you scoll past them.' />\n                <ListItemSecondaryAction>\n                    <Switch checked={store.settings.markScrolledAsRead}\n                        name='markScrolledAsRead'\n                        onChange={onSwitchChange} />\n                </ListItemSecondaryAction>\n            </ListItem>\n            <ListItem>\n                <ListItemText\n                    primary='Double tap to close articles'\n                    secondary='Whether articles can be closed by double tapping them.' />\n                <ListItemSecondaryAction>\n                    <Switch checked={store.settings.doubleTapToCloseArticles}\n                        name='doubleTapToCloseArticles'\n                        onChange={onSwitchChange}/>\n                </ListItemSecondaryAction>\n            </ListItem>\n            <Divider />\n            <ListItem>\n                <ListItemText\n                    primary=\"Article Text Size\"\n                    secondary=\"Controls the size of the article text\" />\n                <ListItemSecondaryAction>\n                    <Slider\n                        className={styles.slider}\n                        min={1}\n                        max={5}\n                        step={1}\n                        onChange={onFontSizeChange}\n                        value={store.settings.fontSize} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        </List>\n    </div>;\n}","import { Card, CardContent, CardHeader, CardMedia, Paper, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport React from 'react';\nimport { Entry } from \"./model/entry\";\nimport { getEntryByline, getEntrySummary, getEntryVisualUrl } from \"./services/entry\";\n\nconst useStyles = makeStyles({\n    paper: {\n        cursor: 'pointer',\n        position: 'relative'\n    },\n    card: {\n        maxHeight: '500px'\n    },\n    read: {\n        color: '#F0F0F0 !important'\n    },\n    unread: {\n\n    },\n    tint: {\n        background: '#FFFFFF',\n        opacity: 0.6,\n        top: '0',\n        left: '0',\n        bottom: '0',\n        right: '0',\n        position: 'absolute'\n    }\n});\n\nexport default (props: { entry: Entry, showingUnreadOnly?: boolean }) => {\n    const styles = useStyles();\n\n    const visualUrl = getEntryVisualUrl(props.entry);\n    const subheader = getEntryByline(props.entry);\n    const summary = getEntrySummary(props.entry);\n\n    // Tint unread articles if and only if they are read and only unread articles are meant to be displayed.\n    const tintGray = !props.entry.unread && props.showingUnreadOnly;\n\n    return <Paper className={styles.paper}>\n            <Card className={styles.card}>\n                <CardHeader\n                    title={props.entry.title}\n                    subheader={subheader}/>\n\n                {visualUrl && <CardMedia\n                    src={visualUrl}\n                    component='img'\n                    title=\"Visual\"\n                    />}\n                {summary && <CardContent>\n                    <Typography component=\"small\">\n                        <div dangerouslySetInnerHTML={{ __html: summary }}></div>\n                    </Typography>\n                </CardContent>}\n            </Card>\n            {tintGray && <div className={styles.tint}></div>}\n        </Paper>;\n}","import { store as s } from 'react-recollect';\nimport { Stream } from '../model/stream';\nimport { Subscription } from '../model/subscription';\nimport { StoreDef, StoreStream } from '../types/RecollectStore';\nimport { Entry } from '../model/entry';\nimport { getUncategorizedId, getSavedId } from '../api/streams';\nimport { getStore } from '../hooks/store';\nimport { saveChildren, loadStore } from './persister';\nimport { loadSettings } from '../actions/settings';\nconst store = s as StoreDef;\n \nexport const initStore = () => {\n    store.streams = {};\n    store.entries = {};\n    store.updating = {\n        categories: false,\n        profile: false,\n    };\n    store.settings = loadSettings();\n    store.current = {\n    };\n\n    loadStore();\n\n    // Include our fake stream by default.\n    // setAllStreams(store.profile.id, require('../fakeStream.json'));\n    // store.collections = require('../fakeCollections.json');\n}\n\nexport const setStream = (stream: Stream) => {\n    const entryUpdate = stream.items.reduce((prev, next) => ({\n        ...prev,\n        [next.id]: next\n    }), {});\n\n    store.entries = {\n        ...store.entries,\n        ...entryUpdate\n    };\n\n    store.streams[stream.id] = {\n        ...stream,\n        items: stream.items.map(i => i.id),\n        lastFetched: Date.now()\n    };\n}\n\nexport const getStream = (streamId: string): Stream => {\n    const store = getStore();\n    const stream = store.streams[streamId];\n    if (!stream) return;\n    return {\n        ...stream,\n        items: stream.items\n            .map(i => store.entries[i])\n            .filter(e => e)\n            .filter(e => e.unread || !store.settings.unreadOnly)\n    };\n}\n\nexport const getTaggedEntriesAsStream = (tag: string): Stream => {\n    const store = getStore();\n    return {\n        id: tag,\n        title: tag,\n        items: Object.values(store.entries)\n            .filter(e => e.unread || !store.settings.unreadOnly)\n    }\n}\n\nexport const setAllStreams = (profileId: string, allStream: Stream) => {\n    const uncategorizedId = getUncategorizedId(profileId);\n    const savedId = getSavedId(profileId);\n\n    const entryUpdate: { [id: string]: Entry } = {};\n    const streamUpdate = {\n        [allStream.id]: {\n            ...allStream,\n            items: allStream.items.map(i => i.id),\n            lastFetched: Date.now()\n        },\n        [uncategorizedId]: {\n            id: uncategorizedId,\n            title: \"Uncategorized\",\n            items: [],\n            lastFetched: 0\n        },\n        [savedId]: {\n            id: savedId,\n            title: \"Saved for later\",\n            items: [],\n            lastFetched: 0\n        }\n    };\n\n    for (const entry of allStream.items) {\n        entryUpdate[entry.id] = entry;\n\n        // Add to uncategorized.\n        if (!entry.categories || entry.categories.length === 0) {\n            streamUpdate[uncategorizedId].items.push(entry.id);\n            continue;\n        }\n        \n        // Add to all categories we pretend to have.\n        for (const category of entry.categories) {\n            // If we haven't made a stream for this category, create one.\n            if (!streamUpdate[category.id]) {\n                const oldStream = store.streams[category.id];\n\n                streamUpdate[category.id] = {\n                    id: category.id,\n                    title: category.label,\n                    items: [],\n                    lastFetched: oldStream ? oldStream.lastFetched : 0\n                }\n            }\n\n            streamUpdate[category.id].items.push(entry.id);\n        }\n    }\n\n    // Deduplicate items.\n    for (const category of Object.values(streamUpdate)) {\n        category.items = Array.from(new Set(category.items));\n    }\n\n    store.entries = {\n        ...store.entries,\n        ...entryUpdate\n    };\n\n    store.streams = {\n        ...store.streams,\n        ...streamUpdate\n    }\n\n    Promise.all([\n        saveChildren('streams', streamUpdate),\n        saveChildren('entries', entryUpdate)\n    ]);\n}","import { Store } from \"react-recollect\";\nimport { getStore } from \"../hooks/store\";\nimport { getAllId, getStream } from \"../api/streams\";\nimport { updateProfile } from \"./profile\";\nimport { setAllStreams } from \"../services/store\";\n\nexport const updateStreams = async (streamId?: string, unreadOnly: boolean = false) => {\n    if (!getStore().profile)\n        await updateProfile();\n\n    streamId = streamId || getAllId(getStore().profile.id);\n    if (getStore().updating[streamId]) return;\n    getStore().updating[streamId] = true;\n\n    try {\n        const stream = await getStream(streamId, 'contents', { unreadOnly });\n\n        // TODO: We should have a better set all streams method.\n        setAllStreams(getStore().profile.id, stream);\n    } catch (error) {\n        window.snackHelper.enqueueSnackbar(\"Unable to update stream. You appear to be offline.\")\n    }\n    getStore().updating[streamId] = false;\n}","import { makeStyles } from \"@material-ui/styles\";\nimport * as React from 'react';\n\nconst useStyles = makeStyles({\n    root: {\n        display: 'flex',\n        justifyContent: 'center'\n    }\n});\n\nexport default props => {\n    const styles = useStyles();\n\n    return <div className={styles.root}>\n        {props.children}\n    </div>\n}","import * as React from 'react';\nimport { useRef, useState } from 'react';\nimport { debounce } from '../services/debounce';\nimport { RootRef } from '@material-ui/core';\n\ninterface Props {\n    getContainer: (node: HTMLElement) => HTMLElement;\n    children: (visible: boolean) => React.ReactNode;\n}\n\nconst isAbove = (container: HTMLElement, element: HTMLElement) => {\n    if (!container || !element) return false;\n\n    const elementRect = element.getBoundingClientRect();\n    const containerRect = container.getBoundingClientRect();\n\n    return elementRect.bottom < containerRect.top;\n}\nexport const ScrollVisibility = (props: Props) => {\n    const elementRef = useRef<HTMLDivElement>(null);\n    const [scrollContainer, setScrollContainer] = useState(null);\n    const [scrollHandler, setScrollHandler] = useState(null);\n    const [above, setAbove] = useState(false);\n\n    React.useEffect(() => {\n        if (!elementRef || !elementRef.current) return;\n\n        // TODO: This doesn't seem to be removing the handler?\n        if (scrollContainer && scrollHandler)\n            scrollContainer.removeEventListener('scroll', scrollHandler);\n        \n        const handler = e => {\n            const newAbove = isAbove(scrollContainer, elementRef.current);\n\n            // Debouncing isn't working, don't trigger rerender.\n            if (newAbove !== above) setAbove(newAbove);\n        };\n\n        const debounced = debounce(handler, 1000);\n\n        const container = props.getContainer(elementRef.current);\n        setScrollContainer(container);\n        setScrollHandler(debounced);\n        container.addEventListener('scroll', debounced, { passive: true })\n        \n        return () => {\n            scrollContainer && scrollHandler && scrollContainer.removeEventListener('scroll', scrollHandler);\n        }\n    }, [props.getContainer, elementRef]);\n\n\n\n    return <RootRef rootRef={elementRef}>\n        {props.children(!above)}\n    </RootRef>;\n}","import { makeStyles } from \"@material-ui/styles\";\nimport * as React from 'react';\n\nconst useStyles = makeStyles({\n    stickyHeader: {\n        position: 'sticky',\n        top: 0\n    }\n});\n\ninterface Props extends React.HTMLProps<HTMLDivElement> {\n}\n\nexport default (props: Props) => {\n    const styles = useStyles();\n    const { children, className, ...rest } = props;\n\n    return <div className={`${className} ${styles.stickyHeader}`} {...rest}>\n        {children}\n    </div>;\n}","import { CircularProgress, Grid, IconButton, Switch, FormControlLabel, LinearProgress } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport React, { useEffect, useMemo } from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router';\nimport EntryCard from \"./EntryCard\";\nimport { useStream } from './hooks/stream';\nimport { useStore, isUpdating } from './hooks/store';\nimport AppBarButton from './components/AppBarButton';\nimport { Refresh } from '@material-ui/icons';\nimport { updateStreams } from './actions/stream';\nimport { getStream } from './services/store';\nimport Centre from './components/Centre';\nimport { Entry } from './model/entry';\nimport { History } from 'history';\nimport { ScrollVisibility } from './components/ScrollVisibility';\nimport { setUnread } from './actions/marker';\nimport StickyHeader from './components/StickyHeader';\n\nconst useStyles = makeStyles({\n  root: {\n  },\n  loadingButton: {\n    color: 'white !important'\n  },\n  loader: {\n    marginBottom: \"10px\",\n  },\n  header: {\n    top: '-10px',\n    zIndex: 1000,\n    margin: '-10px -10px 10px -10px'\n  }\n});\n\ntype Props = RouteComponentProps<any> & {\n  id: string;\n  active: boolean;\n};\n\nconst MarkEntryAsRead = (props: { entry: Entry }) => {\n  useEffect(() => {\n    if (!props.entry || !props.entry.unread) return;\n\n    setUnread(props.entry, false);\n  }, [props.entry && props.entry.id])\n\n  return null;\n}\n\nexport default withRouter((props: Props) => {\n  const streamId = props.id;\n  const stream = useStream(streamId);\n\n  useEffect(() => {\n    if (!streamId || stream && stream.id !== streamId) return;\n    updateStreams(streamId);\n  }, [streamId]);\n\n  return <EntriesViewer\n    entries={stream && stream.items}\n    id={streamId}\n    history={props.history}\n    active={props.active} />\n});\n\nconst EntriesViewer = (props: { entries: Entry[], id: string, active: boolean, history: History }) => {\n  const store = useStore();\n  const styles = useStyles();\n  const markScrolledAsRead = store.settings.markScrolledAsRead;\n\n  const loading = !props.entries || isUpdating(props.id);\n\n  // Only recalculate suitable entries if something important changes,\n  // not only if we mark articles as read.\n  const suitableEntries = useMemo(() => props.entries\n    ? props.entries.filter(e => e && (e.unread || !store.settings.unreadOnly))\n    : [],\n    [props.entries && props.entries.length,\n    props.id,\n    store.settings.unreadOnly,\n    store.updating[props.id]]);\n\n  const unreadCount = useMemo(() => suitableEntries.filter(e => e.unread).length, [props.entries]);\n  const readProgress = (1 - unreadCount / suitableEntries.length) * 100;\n  return <div className={styles.root}>\n    {store.settings.unreadOnly\n      && !!suitableEntries.length\n      && <StickyHeader className={styles.header}>\n        <LinearProgress variant='determinate' value={readProgress} color='secondary' />\n      </StickyHeader>}\n    {loading && <Centre>\n      <CircularProgress className={styles.loader} />\n    </Centre>}\n    <Grid spacing={24} container justify='center' wrap='wrap'>\n      {suitableEntries\n        .map(e => <ScrollVisibility key={e.id}\n          getContainer={n => n.parentElement.parentElement.parentElement}>\n          {(visible) => <Grid item lg={3} md={6} sm={6} xs={12} onClick={() => props.history.push(`/entries/${e.id}`)}>\n            <EntryCard entry={e} showingUnreadOnly={store.settings.unreadOnly} />\n            {!visible && markScrolledAsRead && <MarkEntryAsRead entry={e} />}\n          </Grid>}\n        </ScrollVisibility>)}\n    </Grid>\n    {props.active && <>\n      <AppBarButton>\n        <IconButton disabled={loading} onClick={() => updateStreams(props.id)}>\n          <Refresh />\n        </IconButton>\n      </AppBarButton>\n      <AppBarButton>\n        <FormControlLabel\n          control={<Switch checked={store.settings.unreadOnly} onClick={() => store.settings.unreadOnly = !store.settings.unreadOnly} />}\n          label=\"Unread\" />\n      </AppBarButton>\n    </>}\n  </div>\n}","import { useEffect } from \"react\";\nimport { getStream, getAllStreams } from \"../api/streams\";\nimport { Entry } from \"../model/entry\";\nimport { Stream } from \"../model/stream\";\nimport { setAllStreams } from \"../services/store\";\nimport { useStore } from \"./store\";\nimport { executeOnce } from \"./promise\";\nimport { useProfile } from \"./profile\";\n\nexport const useStreams = () => {\n    const store = useStore();\n    const profile = useProfile();\n\n    const streams = store.streams;\n\n    // If we haven't the streams, get them from the internet.\n    executeOnce((profileId) => {\n        if (!profileId) return;\n\n        return !streams && getAllStreams(profileId).then(streams => setAllStreams(profileId, streams));\n    }, profile && profile.id);\n\n    return streams;\n}\n\nexport const useStream = (streamId: string): Stream => {\n    const store = useStore();\n    if (!streamId) return;\n    \n    const streams = store.streams;\n\n    // If it's a feed\n    if (streamId.startsWith('feed/')) {\n        return {\n            id: streamId,\n            items: Object.values(store.entries).filter(e => e.origin.streamId === streamId),\n            title: 'Feed'\n        };\n    }\n\n    // If it's a tag\n    if (streamId.includes('/tag/')) {\n        return {\n            id: streamId,\n            items: Object.values(store.entries).filter(e => e.tags && e.tags.some(t => t.id === streamId)),\n            title: 'Tag'\n        };\n    }\n    const stream = streams[streamId];\n\n    return stream\n        ? {\n            ...stream,\n            items: stream.items.map(i => store.entries[i])\n        }\n        : undefined;\n}\n\nexport const useEntries = (): Entry[] => {\n    const store = useStore();\n    useStreams();\n\n    return Object.values(store.entries);\n}\n\nexport const useEntry = (entryId: string): Entry => {\n    const store = useStore();\n    useStreams();\n\n    return store.entries[entryId];\n}\n\nexport const useFeeds = (feedId: string): Entry[] => {\n    const entries = useEntries();\n    return entries.filter(e => e.origin.streamId === feedId);\n}","import { MuiThemeProvider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport { SnackbarProvider } from 'notistack';\nimport React, { useEffect, useMemo } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { getAllId } from './api/streams';\nimport AppBar from './AppBar';\nimport { SnackbarHelper } from './components/SnackbarHelper';\nimport EntryViewer from './EntryViewer';\nimport { useProfile } from './hooks/profile';\nimport { useStore } from './hooks/store';\nimport RouteManager, { AppRoute } from './RouteManager';\nimport SettingsPage from './SettingsPage';\nimport StreamViewer from './StreamViewer';\nimport { buildTheme } from './theme';\nimport \"./api/markers\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100vw',\n    height: '100vw'\n  }\n});\n\nconst routes: AppRoute[] = [\n  {\n    prefix: '/settings/',\n    render: () => <SettingsPage />\n  },\n  {\n    prefix: '/stream/',\n    render: (id, active) => <StreamViewer id={id} active={active} />\n  },\n  {\n    prefix: '/entries/',\n    render: (id, active) => <EntryViewer id={id} active={active} />\n  }\n];\n\nexport const App = (props) => {\n  const styles = useStyles();\n  const store = useStore();\n  const profile = useProfile();\n\n  const theme = useMemo(() => {\n    return buildTheme(store.settings);\n  }, [store.settings.fontSize]);\n\n  useEffect(() => {\n    if (store.current['/stream/'] || !profile) return;\n\n    store.current['/stream/'] = getAllId(profile.id);\n  }, [store.current, profile]);\n\n  return <BrowserRouter>\n    <MuiThemeProvider theme={theme}>\n      <SnackbarProvider>\n        <SnackbarHelper/>\n        <div className={styles.root}>\n          <AppBar />\n          <RouteManager routes={routes} />\n        </div>\n      </SnackbarProvider>\n    </MuiThemeProvider>\n  </BrowserRouter>;\n};\n\nexport default App;\n","import { createMuiTheme } from \"@material-ui/core\";\nimport { Settings } from \"./types/RecollectStore\";\n\nexport const buildTheme = (settings: Settings) => createMuiTheme({\n    palette: {\n        type: settings.darkMode ? 'dark' : 'light',\n        primary: {\n            main: '#2BB24C'\n        },\n    },\n    typography: {\n        fontSize: 8 + (settings.fontSize * 2)\n    }\n});","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { initStore } from './services/store';\nimport * as serviceWorker from './serviceWorker';\n\n// Make sure our store is initialized.\ninitStore();\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}