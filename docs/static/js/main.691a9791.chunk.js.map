{"version":3,"sources":["components/ListLinkButton.tsx","AppDrawer.tsx","AppBar.tsx","components/SnackbarHelper.tsx","services/entry.ts","hooks/store.ts","api/common.ts","api/entry.ts","services/persister.ts","actions/entry.ts","components/AppBarButton.tsx","actions/marker.ts","MarkerButton.tsx","hooks/callbacks.ts","EntryViewer.tsx","hooks/responsive.ts","components/SwipeableView.tsx","RouteManager.tsx","services/debounce.ts","actions/settings.ts","SettingsPage.tsx","EntryCard.tsx","api/streams.ts","services/subscriptions.ts","actions/stream.ts","components/Centre.tsx","components/ScrollVisibility.tsx","components/StickyHeader.tsx","StreamViewer.tsx","hooks/stream.ts","api/search.ts","SubscriptionManager.tsx","App.tsx","theme.ts","services/store.ts","serviceWorker.ts","index.tsx"],"names":["withRouter","props","react","core_index_es","button","onClick","history","push","href","icon","primary","text","AppDrawer","_useState","useState","_useState2","Object","slicedToArray","open","setOpen","react_default","a","createElement","React","cloneElement","trigger","onClose","style","width","margin","variant","components_ListLinkButton","icons_index_es","Settings_default","useStyles","createContext","undefined","makeStyles","pageActions","flex","display","flexDirection","AppBar","styles","position","color","className","id","SnackbarHelper","withSnackbar","window","snackHelper","getEntryByline","entry","concat","engagement","origin","title","relativeDate","Date","published","updaters","currentStore","defaultStore","getStore","afterChange","event","store","prevStore","forEach","u","useStore","setStore","useEffect","updater","addUpdater","index","indexOf","splice","removeUpdater","feedlyUrl","feedlyQueryString","params","fixedCase","key","queryString","stringify","makeRequest","_ref","asyncToGenerator","regenerator_default","mark","_callee","url","joiner","requestUrl","response","wrap","_context","prev","next","length","includes","fetch","method","sent","ok","abrupt","json","stop","_x","_x2","apply","this","arguments","getEntry","entryId","entries","encodeURIComponent","localForage","save","value","setItem","JSON","saveEntry","saveChildren","getItem","then","keys","t0","Set","getChildKeys","t1","toConsumableArray","map","k","add","Array","from","get","_ref2","_callee2","_context2","parse","call","_ref3","_callee3","parentKey","_context3","isArray","_x3","batchedLoad","_ref4","_callee4","storeKey","batchSize","i","results","_args4","_context4","Promise","all","slice","Math","min","objectSpread","reduce","defineProperty","_x4","load","_ref5","_callee5","defaultValue","_args5","_context5","_x5","loadStore","_ref6","_callee6","_context6","updateEntry","force","_args","updating","AppBarButton","appBar","setAppBar","document","getElementById","ReactDOM","createPortal","children","setUnread","unread","on","off","EntryReadButton","toggleRead","useCallback","useDoubleTap","callback","change","requiredTaps","delay","taps","setTimeout","useNTap","useOnScrollEnd","handler","handlers","isScrolling","setScrolling","_useState3","_useState4","scrollTimeout","setScrollTimeout","e","clearTimeout","onStart","onScroll","newScrollTimeout","onEnd","useOnScroll","root","maxWidth","marginLeft","marginRight","@global","article img","article figure","isPhone","theme","useTheme","unstable_useMediaQuery","breakpoints","up","valueOf","useIsPhone","domElement","useRef","shouldMarkAsRead","settings","markOpenedAsRead","maybeMarkAsRead","ref","current","parentElement","scrollTo","scrollToTop","doubleTap","doubleTapToCloseArticles","goBack","stopPropagation","getSelection","removeAllRanges","content","detail","summary","getEntryContent","article","subheader","component","dangerouslySetInnerHTML","__html","active","MarkerButton_EntryReadButton","SwipeableView","swipeableView","activeIndex","setActiveIndex","isNaN","Error","child","offsetLeft","selectedChild","element","closestDistance","Infinity","distance","abs","scrollLeft","onSwiped","scrollSnapType","overflowX","scrollbarWidth","c","flexShrink","scrollSnapAlign","scrollSnapStop","RouteSetter","es_Route","path","prefix","p","location","pathname","substr","setActive","activeSlide","setActiveSlide","slideIndex","routes","findIndex","r","SwipeableView_SwipeableView","n","height","overflow","paddingTop","render","RouteManager_RouteSetter","exact","debounce","f","time","timeout","_len","args","_key","defaultSettings","markScrolledAsRead","unreadOnly","fontSize","darkMode","debouncedSaveSettings","localStorage","console","log","updateSettings","name","slider","SettingsPage","onSwitchChange","setting","target","onFontSizeChange","secondary","checked","onChange","lab_index_es","max","step","paper","cursor","card","maxHeight","read","tint","background","opacity","top","left","bottom","right","EntryCard","visualUrl","visual","getEntrySummary","tintGray","showingUnreadOnly","src","defaultOptions","getStream","streamId","type","options","updateSubscriptions","subscriptions","_iterator","_step","subscription","_createForOfIteratorHelper","s","done","updateSubscription","finish","getSubscription","find","stream","updateStoreWithStream","entryUpdate","oldItems","streamUpdate","_iterator2","_step2","oldEntry","streams","items","lastFetched","now","readTime","err","updateStreams","stream_createForOfIteratorHelper","updateStream","enqueueSnackbar","subscriptionId","error","justifyContent","Centre","ScrollVisibility","elementRef","scrollContainer","setScrollContainer","scrollHandler","setScrollHandler","_useState5","_useState6","above","setAbove","removeEventListener","debounced","newAbove","container","elementRect","getBoundingClientRect","containerRect","isAbove","getContainer","addEventListener","passive","rootRef","stickyHeader","StickyHeader","rest","objectWithoutProperties","assign","loadingButton","loader","marginBottom","header","zIndex","MarkEntryAsRead","values","startsWith","filter","tags","some","t","useStream","StreamViewer_EntriesViewer","EntriesViewer","loading","entryIdsToKeep","setEntryIdsToKeep","getSuitableEntries","keep","sort","b","suitableEntries","useMemo","readProgress","spacing","justify","ScrollVisibility_ScrollVisibility","visible","item","lg","md","sm","xs","StreamViewer_MarkEntryAsRead","Fragment","disabled","control","label","searchFeeds","query","result","padding","SubscriptionManager","subscribedTo","isSubscribed","has","setQuery","_useDebounce","useDebounce","debouncedQuery","searchResults","setSearchResults","toggleSubscription","newSubs","fullWidth","SubscriptionManager_SubscriptionView","useCardStyles","alignItems","alignSelf","flexGrow","controls","SubscriptionView","image","iconUrl","StreamViewer","EntryViewer","App","createMuiTheme","palette","main","typography","BrowserRouter","core_styles","build","Switch","Route","SubscriptionManager_SubscriptionManager","RouteManager","Boolean","hostname","match","categories","loadSettings","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.691a9791.chunk.js","sourcesContent":["import * as React from 'react';\nimport { ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\n\ntype Props = RouteComponentProps & {\n    icon?: any,\n    text: string,\n    href: string\n};\nconst ListLinkButton = (props: Props) => <ListItem button onClick={() => props.history.push(props.href)}>\n    {props.icon && <ListItemIcon>\n        {props.icon}\n    </ListItemIcon>}\n    <ListItemText primary={props.text}/>\n</ListItem>;\n\nexport default withRouter(ListLinkButton);","import { Drawer, List, ListItem, ListItemIcon, ListItemText, Typography } from \"@material-ui/core\";\nimport { Person, RssFeed, Book } from '@material-ui/icons';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport React, { useState } from 'react';\nimport ListLinkButton from './components/ListLinkButton';\n\nexport default (props: { trigger: JSX.Element }) => {\n    const [open, setOpen] = useState(false);\n\n    return <div>\n        {React.cloneElement(props.trigger, { onClick: () => setOpen(true) })}\n        <Drawer open={open} onClose={() => setOpen(false)}>\n            <div style={{ width: '250px', margin: '10px' }}>\n                <Typography variant='h5'>\n                    Progrssive Reader\n                </Typography>\n                <List>\n                    <ListLinkButton icon={<Book/>} text=\"Articles\" href=\"/\" />\n                    <ListLinkButton icon={<RssFeed/>} text=\"Subscriptions\" href=\"/subscriptions\"/>\n                    <ListLinkButton icon={<SettingsIcon/>} text=\"Settings\" href=\"/settings\"/>\n                </List>\n            </div>\n        </Drawer>\n    </div>;\n}","import React, { useState, useEffect } from 'react';\nimport { Toolbar, AppBar, IconButton, Typography } from '@material-ui/core';\nimport { Menu } from '@material-ui/icons';\nimport AppDrawer from './AppDrawer';\nimport { makeStyles } from '@material-ui/styles';\n\nexport const AppBarContext: React.Context<React.Ref<any>> = React.createContext(undefined);\n\nconst useStyles = makeStyles({\n    pageActions: {\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'row-reverse',\n        width: '100%'\n    }\n})\n\nexport default (props) => {\n    const styles = useStyles();\n\n    return <AppBar position=\"static\" color=\"primary\">\n            <Toolbar>\n                <AppDrawer trigger={\n                    <IconButton>\n                        <Menu />\n                    </IconButton>} />\n                <Typography variant=\"title\">Progrssive</Typography>\n                <div className={styles.pageActions} id=\"app-bar-button-container\">\n\n                </div>\n            </Toolbar>\n        </AppBar>;\n}","import { withSnackbar } from \"notistack\";\nimport * as React from 'react';\nimport \"../types/Window\";\n\nexport const SnackbarHelper = withSnackbar((props) => {\n    window.snackHelper = props;\n    return null;\n});","import { Entry } from \"../model/entry\";\nimport relativeDate from 'tiny-relative-date';\n\nexport const getEntryContent = (entry: Entry) => {\n    const detail = entry.content || entry.summary;\n    return detail && detail.content;\n}\n\nexport const getEntrySummary = (entry: Entry) => entry.summary && entry.summary.content;\n\nexport const getEntryByline = (entry: Entry) => `${entry.engagement ? entry.engagement + ' ' : ''}${entry.origin && entry.origin.title} / ${relativeDate(new Date(entry.published))}`;\n\nexport const getEntryVisualUrl = (entry: Entry) => entry.visual && entry.visual.url;\n\nexport const isSaved = (entry: Entry) => entry.tags && entry.tags.some(e => e.id.endsWith('global.saved'));","import { useEffect, useState } from 'react';\nimport { afterChange, store as defaultStore, Store } from 'react-recollect';\nimport { makeUpdatableSharedCache } from './promise';\n\ntype Updater = (store: Store) => void;\n\nconst updaters: Updater[] = [];\nconst addUpdater = (updater: Updater) => {\n    updaters.push(updater);\n    return updater;\n}\n\nconst removeUpdater = (updater: Updater) => {\n    const index = updaters.indexOf(updater);\n    updaters.splice(index, 1);\n}\n\nlet currentStore = defaultStore;\nexport const getStore = () => currentStore;\n(window as any).getStore = getStore;\n\nafterChange(event => {\n    if (event.store === event.prevStore)\n      return;\n\n    currentStore = event.store;\n    updaters.forEach(u => u(event.store));\n});\n\nexport const useStore = () => {\n    const [store, setStore] = useState(defaultStore);\n\n    useEffect(() => {\n        const updater = addUpdater(setStore);\n        return () => {\n            removeUpdater(updater);\n        };\n    });\n\n    return store;\n}\n\nexport const makeStoreCache = <T>(fetcher: (store: Store) => T | Promise<T>, onFetched: (store: Store, value: T) => void) => {\n    const storeFetcher = async () => {\n        const result = await fetcher(currentStore);\n        onFetched(currentStore, result);\n        return result;\n    };\n\n    const useCache = makeUpdatableSharedCache(storeFetcher);\n    return (lastUpdate?: number) => {\n        const cached = useCache(lastUpdate);\n        return cached;\n    }\n}\n\nexport const isUpdating = (id: string) => currentStore.updating[id || undefined];","import queryString from \"querystring\";\n\nconst feedlyUrl = \"https://cloud.feedly.com/v3/\"\nconst bypassCorsUrl = 'https://cors-anywhere.herokuapp.com/';\n\nexport const feedlyQueryString = (params: Object): string => {\n    const fixedCase = {};\n    for (const key in params || {}) {\n        fixedCase[key] = params[key];\n    }\n\n    return queryString.stringify(fixedCase);\n}\n\nexport const makeRequest = async <T>(url: string, params?: Object): Promise<T> => {\n    const queryString = feedlyQueryString(params);\n    const joiner = queryString.length === 0\n        ? ''\n        : url.includes('?')\n            ? '&'\n            : '?';\n\n    const requestUrl = `${feedlyUrl}${url}${joiner}${queryString}`;\n\n    // TODO: Use a custom cors proxy, this should not be in production.\n    const response = await fetch(`${bypassCorsUrl}${requestUrl}`, {\n        method: 'GET'\n    });\n\n    // Make sure error handling is triggered if the response status is not ok.\n    if (!response.ok)\n        throw response;\n\n    return response.json();\n}\n\nexport const makePostRequest = (endpoint: string, params: Object) => {\n    return fetch(`${bypassCorsUrl}${feedlyUrl}${endpoint}`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(params)\n    });\n}","import { makeRequest } from \"./common\";\nimport { Entry } from \"../model/entry\";\n\nexport const getEntry = async (entryId: string) => {\n    const entries = await makeRequest<Entry[]>(`/entries/${encodeURIComponent(entryId)}`);\n    return entries[0];\n}","import localForage from 'localforage';\nimport { Store } from 'react-recollect';\nimport { getStore } from '../hooks/store';\nimport { Entry } from '../model/entry';\n\n(window as any)['localForage'] = localForage;\n\nexport const entriesPrefix: keyof Store = 'entries';\n\nexport const save = (key: string, value: object) => {\n    return localForage.setItem(key, JSON.stringify(value));\n}\n\nexport const saveEntry = (entry: Entry) => {\n    return save(`${entriesPrefix}.${entry.id}`, entry);\n}\n\nexport const saveChildren = (key: string, value: object) => {\n    return localForage.getItem<string[]>(key)\n        .then(async keys => new Set(await getChildKeys(key)))\n        .then(keys => [\n            ...Object.keys(value).map(k => {\n                keys.add(k);\n                return save(`${key}.${k}`, value[k])\n            }),\n            save(key, Array.from(keys))\n        ]);\n};\n\nexport const get = async (key: string) => JSON.parse(await localForage.getItem(key));\n\nconst getChildKeys = async (parentKey: string) => {\n    const keys = await get(parentKey);\n    return Array.isArray(keys) ? keys : [];\n};\n\nconst batchedLoad = async (storeKey: keyof Store, batchSize = 20) => {\n    const keys = await getChildKeys(storeKey);\n    for (let i = 0; i < keys.length; i += batchSize) {\n        const results = await Promise.all(keys.slice(i, Math.min(i + batchSize, keys.length))\n            .map(key => get(`${storeKey}.${key}`)));\n        getStore()[storeKey] = {\n            ...getStore()[storeKey],\n            ...results.reduce((prev, next) => ({ ...prev, [(next as any).id]: next }), {})\n        };\n    }\n}\n\nexport const load = async (storeKey: keyof Store, defaultValue = undefined) => {\n    const value = await get(storeKey) || defaultValue;\n    getStore()[storeKey] = value;\n    return value;\n}\n\nexport const loadEntry = (id: string): Promise<Entry> => get(`${entriesPrefix}.${id}`) as Promise<Entry>;\n\nexport const loadStore = async () => {\n    await Promise.all([\n        batchedLoad('entries'),\n        batchedLoad('streams'),\n        load('subscriptions', [])\n    ]);\n}","import { getStore } from \"../hooks/store\";\nimport { getEntry } from \"../api/entry\";\nimport { loadEntry } from \"../services/persister\";\n\nexport const updateEntry = async (entryId: string, force: boolean = false) => {\n    if (getStore().updating[entryId]) return;\n    getStore().updating[entryId] = false;\n\n    // If we aren't forcing network, try and load the entry from disk.\n    // Fallback to fetching from the network.\n    const entry = (!force && await loadEntry(entryId))\n        || await getEntry(entryId);\n        \n    const store = getStore();\n    store.entries = {\n        ...store.entries,\n        [entryId]: entry\n    };\n\n    delete store.updating[entryId];\n}","import ReactDOM from \"react-dom\";\nimport React, { useState, useEffect } from 'react';\n\nexport default (props: { children: React.ReactNode }) => {\n    const [appBar, setAppBar] = useState(undefined);\n\n    useEffect(() => {\n        setAppBar(document.getElementById('app-bar-button-container'));\n    }, []);\n\n    if (!appBar) return null;\n    \n    return ReactDOM.createPortal(props.children, appBar);\n}","import { Entry } from \"../model/entry\";\nimport { saveEntry } from \"../services/persister\";\n\nexport const setUnread = async (entry: Entry, unread: boolean) => {\n    entry.unread = unread;\n    await saveEntry(entry);\n}\n","import * as React from 'react';\nimport { Button, IconButton } from '@material-ui/core';\nimport { Entry } from './model/entry';\nimport { RemoveRedEye, RemoveCircleOutline, StarSharp, StarOutlined, StarBorderOutlined, Star } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/styles';\nimport { useCallback } from 'react';\nimport { isSaved } from './services/entry';\nimport { setUnread } from './actions/marker';\n\nconst useStyles = makeStyles({\n    on: {\n        color: 'white !important'\n    },\n    off: {\n        color: 'gray !important'\n    }\n})\n\ninterface MarkerButtonProps {\n    entry: Entry;\n}\n\nexport const EntryReadButton = (props: MarkerButtonProps) => {\n    const styles = useStyles(undefined);\n    const toggleRead = useCallback(() => {\n        setUnread(props.entry, !props.entry.unread);\n    }, [props.entry, props.entry.unread]);\n\n    return <IconButton\n        className={props.entry.unread ? styles.on : styles.off}\n        onClick={toggleRead}>\n        <RemoveRedEye/>\n    </IconButton>;\n}","import * as React from 'react';\nimport { useCallback, useState } from 'react';\n\nexport const useNTap = <Type>(callback: (...args) => void, change: [], requiredTaps = 2, delay = 200) => {\n    // Should be fine here. If we rerender a double tap should be cancelled anyway.\n    let taps = 0;\n    const memoized = useCallback((...args) => {\n        // Increment number of taps\n        taps++;\n        // After timeout, we don't care about this tap.\n        setTimeout(() => taps--, delay);\n\n        // If we've tapped enough times, fire the callback.\n        if (taps >= requiredTaps) callback(...args);\n    }, [...change, requiredTaps, delay]);\n\n    return memoized;\n}\n\nexport const useDoubleTap = (callback: (...args) => void, change: [], delay = 200) => useNTap(callback, change, 2, delay);\n\ninterface ScrollEvents {\n    onStart?: () => void;\n    onEnd?: () => void;\n    onScroll?: () => void;\n}\n\nexport const useOnScroll = (handlers: ScrollEvents) => {\n    const [isScrolling, setScrolling ] = useState(false);\n    const [scrollTimeout, setScrollTimeout] = useState(undefined);\n\n    const memoized = useCallback((e) => {\n        // Reset timeout.\n        clearTimeout(scrollTimeout);\n\n        if (!isScrolling) {\n            setScrolling(true);\n            handlers.onStart && handlers.onStart();\n        }\n\n        handlers.onScroll && handlers.onScroll();\n\n        const newScrollTimeout = setTimeout(() => {\n            setScrolling(false);\n            handlers.onEnd && handlers.onEnd();\n        }, 100);\n        setScrollTimeout(newScrollTimeout);\n    }, [handlers, isScrolling, scrollTimeout]);\n\n    return memoized;\n};\n\nexport const useOnScrollEnd = (handler: () => void) => {\n    return useOnScroll({ onEnd: handler });\n};","import { Card, CardContent, CardHeader, CircularProgress, Typography, Fab } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport * as React from 'react';\nimport { useEffect, useRef } from 'react';\nimport { useIsPhone } from \"./hooks/responsive\";\nimport { useEntry } from \"./hooks/stream\";\nimport { getEntryByline, getEntryContent } from \"./services/entry\";\nimport { getStore, useStore } from \"./hooks/store\";\nimport { updateEntry } from \"./actions/entry\";\nimport AppBarButton from \"./components/AppBarButton\";\nimport { EntryReadButton } from \"./MarkerButton\";\nimport { Entry } from \"./model/entry\";\nimport { setUnread } from \"./actions/marker\";\nimport { useDoubleTap } from \"./hooks/callbacks\";\nimport { withRouter, RouteComponentProps } from \"react-router\";\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: '1000px',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n    },\n    '@global': {\n        'article img': {\n            width: '100%'\n        },\n        'article figure': {\n            margin: 0\n        }\n    }\n});\n\nconst maybeMarkAsRead = (entry: Entry) => {\n    const store = useStore();\n    const shouldMarkAsRead = store.settings.markOpenedAsRead;\n\n    useEffect(() => {\n        if (!entry || !entry.unread || !shouldMarkAsRead) return;\n\n        setUnread(entry, false);\n    }, [entry && entry.id, shouldMarkAsRead]);\n}\n\nconst scrollToTop = (entry: Entry, ref: React.MutableRefObject<any>) => {\n    useEffect(() => {\n        if (!entry || !ref || !ref.current) return;\n\n        ref.current.parentElement.scrollTo(0, 0);\n    }, [entry && entry.id]);\n}\n\ninterface Props extends RouteComponentProps<{}> {\n    id: string,\n    active: boolean\n}\n\nexport default withRouter((props: Props) => {\n    const store = useStore();\n\n    const styles = useStyles();\n    const isPhone = useIsPhone();\n    const domElement = useRef(null);\n\n    const entry = store.entries[props.id];\n\n    useEffect(() => {\n        if (entry || !props.id) return;\n        updateEntry(props.id);\n    }, [props.id]);\n\n    maybeMarkAsRead(entry);\n    scrollToTop(entry, domElement);\n\n    const doubleTap = useDoubleTap((event) => {\n        if (!store.settings.doubleTapToCloseArticles)\n            return;\n\n        props.history.goBack();\n        event.stopPropagation();\n        // Clear potential accidental selection.\n        document.getSelection().removeAllRanges();\n    }, []);\n\n    if (!entry)\n        return <CircularProgress />;\n\n    const content = getEntryContent(entry);\n\n    const article = <>\n        <CardHeader\n            title={entry.title}\n            subheader={getEntryByline(entry)} />\n        {content && <CardContent>\n            <Typography component='small'>\n                <div dangerouslySetInnerHTML={{ __html: content }}></div>\n            </Typography>\n        </CardContent>}\n    </>;\n\n    return <article className={styles.root} ref={domElement} onClick={doubleTap}>\n        {isPhone\n            ? article\n            : <Card>{article}</Card>}\n        {props.active && <>\n            <AppBarButton>\n                <EntryReadButton entry={entry} />\n            </AppBarButton>\n        </>}\n    </article>;\n});","import { Theme } from \"@material-ui/core\";\nimport { unstable_useMediaQuery } from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/styles\";\n\nexport const useIsPhone = () => {\n    const theme = useTheme() as Theme;\n    if (!theme) return false;\n    const query = unstable_useMediaQuery(theme.breakpoints.up('md'));\n\n    return !query.valueOf();\n}","import * as React from 'react'\nimport { useEffect, useCallback, useRef, useState } from 'react';\nimport { useOnScrollEnd } from '../hooks/callbacks';\n\ninterface Props {\n    children: React.ReactNode[] | React.ReactNode;\n\n    onSwiped?: (selectedIndex: number) => void;\n    activeIndex?: number;\n}\n\nexport const SwipeableView = (props: Props) => {\n    const children = Array.isArray(props.children) ? props.children : [props.children];\n    \n    const swipeableView = useRef(null);\n    const [activeIndex, setActiveIndex] = useState(props.activeIndex || 0);\n    \n    // Update active index based on props.activeIndex.\n    useEffect(() => {\n        if (isNaN(props.activeIndex) || activeIndex === props.activeIndex)\n          return;\n\n        if (!swipeableView.current)\n          return;\n\n        if (props.activeIndex < 0 || swipeableView.current && props.activeIndex > swipeableView.current.children.length)\n          throw new Error(`Index ${props.activeIndex} out of range!`);\n\n        const child = swipeableView.current.children[props.activeIndex];\n        swipeableView.current.scrollTo(child.offsetLeft, 0);\n\n        setActiveIndex(props.activeIndex);\n    }, [props.activeIndex])\n\n    const onScroll = useOnScrollEnd(() => {\n        const element = swipeableView.current;\n\n        let selectedChild;\n        let closestDistance = Infinity;\n\n        for (let i = 0; i < element.children.length; ++i) {\n            const child: any = element.children[i];\n            const distance = Math.abs(element.scrollLeft - child.offsetLeft);\n            if (distance < closestDistance) {\n                closestDistance = distance;\n                selectedChild = i;\n            }\n        }\n\n        if (selectedChild !== undefined && selectedChild !== activeIndex) {\n            setActiveIndex(selectedChild);\n            props.onSwiped && props.onSwiped(selectedChild);\n        }\n    });\n\n    return <div style={{\n        scrollSnapType: 'x mandatory',\n        overflowX: 'scroll',\n        display: 'flex',\n        scrollbarWidth: 'none',\n    }}\n        onScroll={onScroll}\n        ref={swipeableView}>\n        {children.map((c, i) => <div key={i} style={{\n            flexShrink: 0,\n            scrollSnapAlign: 'start',\n            scrollSnapStop: 'always'\n        } as any}>\n            {c}\n        </div>)}\n    </div>\n}","import * as React from 'react';\nimport { useCallback, useState } from 'react';\nimport { Route, RouteComponentProps, withRouter, Switch } from 'react-router';\nimport { SwipeableView } from './components/SwipeableView';\nimport { useStore } from './hooks/store';\n\nexport interface AppRoute {\n    prefix: string;\n    render: (id?: string, active?: boolean) => React.ReactNode;\n}\n\ninterface Props extends RouteComponentProps<any> {\n    routes: AppRoute[];\n}\n\ninterface RouteSetterProps {\n    prefix: string;\n    setActive: (prefix: string, id: string) => void;\n}\n\nconst RouteSetter = (props: RouteSetterProps) => {\n    return <Route path={`${props.prefix}:id*`}\n        component={(p: RouteComponentProps) => {\n            const location = p.location.pathname;\n            const id = location.substr(props.prefix.length);\n\n            props.setActive(props.prefix, id);\n            return null;\n        }}>\n    </Route>\n}\n\nexport default withRouter((props: Props) => {\n    const store = useStore();\n    const [activeSlide, setActiveSlide] = useState(0);\n\n    const setActive = useCallback((prefix: string, id: string) => {\n        store.current[prefix] = id;\n\n        const slideIndex = props.routes.findIndex(r => r.prefix === prefix);\n        setActiveSlide(slideIndex);\n    }, [props.routes, setActiveSlide]);\n\n    return <>\n        <SwipeableView\n            activeIndex={activeSlide}\n            onSwiped={(n) => {\n            if (n === activeSlide) return;\n\n            const prefix = props.routes[n].prefix;\n            const path = store.current[prefix];\n\n            setActiveSlide((n + 1) % 2);\n            props.history.push(`${prefix}${path || ''}`)\n        }}>\n            {props.routes.map((r, i) => <div\n                style={{ width: '100vw', height: '90vh', overflow: 'hidden auto', paddingTop: '10px' }}\n                key={r.prefix}>\n                {r.render(store.current[r.prefix], activeSlide === i)}\n            </div>)}\n        </SwipeableView>\n        {props.routes.map(r => <RouteSetter key={r.prefix} prefix={r.prefix} setActive={setActive}/>)}\n        <Route path='/' exact={true} component={() => {\n            setActiveSlide(1);\n            return null;\n        }}/>\n    </>\n});","export const debounce = (f: (...args) => void, time: number) => {\n    let timeout;\n\n    const invoke = (...args) => {\n        clearTimeout(timeout);\n        timeout = setTimeout(() => f(...args), time);\n    }\n    \n    return invoke;\n}","import { Settings } from \"../types/RecollectStore\";\nimport { getStore } from \"../hooks/store\";\nimport { debounce } from \"../services/debounce\";\n\nconst defaultSettings: Settings = {\n    markOpenedAsRead: true,\n    markScrolledAsRead: true,\n    doubleTapToCloseArticles: true,\n    unreadOnly: true,\n    fontSize: 3,\n    darkMode: false\n}\n\nconst saveSettings = (settings: Settings) => {\n    window.localStorage.setItem('settings', JSON.stringify(settings));\n    console.log('saved settings!');\n}\nconst debouncedSaveSettings = debounce(saveSettings, 1000);\n\nexport const updateSettings = <T extends keyof Settings>(name: T, value: Settings[T]) => {\n    getStore().settings[name] = value;\n    debouncedSaveSettings(getStore().settings);\n}\n\nexport const loadSettings = () => {\n    const json = window.localStorage.getItem('settings');\n    return json ? JSON.parse(json) as Settings : defaultSettings;\n}","import * as React from 'react';\nimport { List, ListItem, ListItemText, ListItemSecondaryAction, Switch, Divider } from '@material-ui/core';\nimport { Slider } from '@material-ui/lab';\nimport { makeStyles } from '@material-ui/styles';\nimport { getStore, useStore } from './hooks/store';\nimport { updateSettings } from './actions/settings';\nimport { useCallback } from 'react';\n\nconst useStyles = makeStyles({\n    slider: {\n        width: '48px !important'\n    }\n});\n\nexport default (props) => {\n    const styles = useStyles();\n    const store = useStore();\n\n    const onSwitchChange = React.useCallback((e: React.ChangeEvent<HTMLInputElement>, value: boolean) => {\n        const setting = e.target['name'];\n        updateSettings(setting as any, value)\n    }, []);\n\n    const onFontSizeChange = useCallback((e: React.ChangeEvent<{}>, value: any) => {\n        updateSettings('fontSize', value);\n    }, []);\n\n    return <div>\n        <List>\n            <ListItem>\n                <ListItemText\n                    primary='Read opened articles'\n                    secondary='Marks articles as read when you open them.' />\n                <ListItemSecondaryAction>\n                    <Switch\n                        checked={store.settings.markOpenedAsRead}\n                        name='markOpenedAsRead'\n                        onChange={onSwitchChange} />\n                </ListItemSecondaryAction>\n            </ListItem>\n            <ListItem>\n                <ListItemText\n                    primary='Auto mark as read'\n                    secondary='Marks articles as read when you scoll past them.' />\n                <ListItemSecondaryAction>\n                    <Switch checked={store.settings.markScrolledAsRead}\n                        name='markScrolledAsRead'\n                        onChange={onSwitchChange} />\n                </ListItemSecondaryAction>\n            </ListItem>\n            <ListItem>\n                <ListItemText\n                    primary='Double tap to close articles'\n                    secondary='Whether articles can be closed by double tapping them.' />\n                <ListItemSecondaryAction>\n                    <Switch checked={store.settings.doubleTapToCloseArticles}\n                        name='doubleTapToCloseArticles'\n                        onChange={onSwitchChange}/>\n                </ListItemSecondaryAction>\n            </ListItem>\n            <Divider />\n            <ListItem>\n                <ListItemText\n                    primary=\"Article Text Size\"\n                    secondary=\"Controls the size of the article text\" />\n                <ListItemSecondaryAction>\n                    <Slider\n                        className={styles.slider}\n                        min={1}\n                        max={5}\n                        step={1}\n                        onChange={onFontSizeChange}\n                        value={store.settings.fontSize} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        </List>\n    </div>;\n}","import { Card, CardContent, CardHeader, CardMedia, Paper, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport React from 'react';\nimport { Entry } from \"./model/entry\";\nimport { getEntryByline, getEntrySummary, getEntryVisualUrl } from \"./services/entry\";\n\nconst useStyles = makeStyles({\n    paper: {\n        cursor: 'pointer',\n        position: 'relative'\n    },\n    card: {\n        maxHeight: '500px'\n    },\n    read: {\n        color: '#F0F0F0 !important'\n    },\n    unread: {\n\n    },\n    tint: {\n        background: '#FFFFFF',\n        opacity: 0.6,\n        top: '0',\n        left: '0',\n        bottom: '0',\n        right: '0',\n        position: 'absolute'\n    }\n});\n\nexport default (props: { entry: Entry, showingUnreadOnly?: boolean }) => {\n    const styles = useStyles();\n\n    const visualUrl = getEntryVisualUrl(props.entry);\n    const subheader = getEntryByline(props.entry);\n    const summary = getEntrySummary(props.entry);\n\n    // Tint unread articles if and only if they are read and only unread articles are meant to be displayed.\n    const tintGray = !props.entry.unread && props.showingUnreadOnly;\n\n    return <Paper className={styles.paper}>\n            <Card className={styles.card}>\n                <CardHeader\n                    title={props.entry.title}\n                    subheader={subheader}/>\n\n                {visualUrl && <CardMedia\n                    src={visualUrl}\n                    component='img'\n                    title=\"Visual\"\n                    />}\n                {summary && <CardContent>\n                    <Typography component=\"small\">\n                        <div dangerouslySetInnerHTML={{ __html: summary }}></div>\n                    </Typography>\n                </CardContent>}\n            </Card>\n            {tintGray && <div className={styles.tint}></div>}\n        </Paper>;\n}","import { Stream } from '../model/stream';\nimport { makeRequest } from './common';\nconst endpoint = '/streams'\n\nexport interface StreamRequestOptions {\n    count?: number;\n    ranked?: 'oldest' | 'newest';\n    newerThan?: number;\n    continuation?: string;\n}\n\nconst defaultOptions = {\n}\n\nexport const getStream = async (streamId: string, type: 'contents' | 'id' = 'contents', options?: StreamRequestOptions): Promise<Stream> => {\n    return makeRequest<Stream>(`${endpoint}/${type}?streamId=${streamId}`, { ...defaultOptions, ...options });\n}","import { Stream } from \"../model/stream\";\nimport { getStore } from \"../hooks/store\";\nimport { getStream } from \"../api/streams\";\nimport { Subscription } from \"../model/subscription\";\nimport { Entry } from \"../model/entry\";\nimport { saveChildren } from \"./persister\";\n\nexport const updateSubscriptions = async () => {\n    const subscriptions = getStore().subscriptions;\n\n    for (const subscription of subscriptions) {\n        await updateSubscription(subscription);\n    }\n}\n\nexport const getSubscription = (id: string) => {\n    const subscriptions = getStore().subscriptions;\n    return subscriptions.find(s => s.id === id);\n}\n\nexport const updateSubscription = async (subscription: Subscription | string) => {\n    const stream = await getStream(typeof subscription === \"string\" ? subscription : subscription.id);\n    await updateStoreWithStream(stream);\n}\n\nexport const updateStoreWithStream = async (stream: Stream) => {\n    const store = getStore();\n\n    const entryUpdate: { [id: string]: Entry } = {};\n\n    const oldItems = (store.streams[stream.id] && store.streams[stream.id].items) || [];\n    const streamUpdate = {\n        [stream.id]: {\n            ...stream,\n            items: Array.from(new Set([...stream.items.map(i => i.id), ...oldItems])),\n            lastFetched: Date.now()\n        }\n    };\n\n    for (const entry of stream.items) {\n        const oldEntry = store.entries[entry.id];\n\n        // Make sure we don't override the unread status.\n        if (oldEntry) {\n            entry.unread = oldEntry.unread;\n            entry.readTime = oldEntry.readTime;\n        }\n        entryUpdate[entry.id] = entry;\n    }\n\n    store.entries = {\n        ...store.entries,\n        ...entryUpdate\n    };\n\n    store.streams = {\n        ...getStore().streams,\n        ...streamUpdate\n    };\n\n    await Promise.all([\n        saveChildren('streams', streamUpdate),\n        saveChildren('entries', entryUpdate)\n    ]);\n}","import { Store } from \"react-recollect\";\nimport { getStore } from \"../hooks/store\";\nimport { updateStoreWithStream, updateSubscription, getSubscription, updateSubscriptions } from \"../services/subscriptions\";\nimport { StreamRequestOptions, getStream } from \"../api/streams\";\n\nexport const updateStreams = async () => {\n    const subscriptions = getStore().subscriptions;\n    for (const subscription of subscriptions) {\n        await updateStream(subscription.id);\n    }\n\n    window.snackHelper.enqueueSnackbar(\"Updated subscriptions!\");\n}\n\nexport const updateStream = async (subscriptionId: string) => {\n    // If there isn't a stream id, we should update all streams.\n    if (!subscriptionId) {\n        updateStreams();\n        return;\n    }\n\n    if (getStore().updating.stream)\n        return;\n\n    getStore().updating.stream = true;\n\n        try {\n            await updateSubscription(subscriptionId);\n        } catch (err) {\n            console.error(subscriptionId, err);\n            window.snackHelper.enqueueSnackbar(`Unabled to update ${getSubscription(subscriptionId).title}. Are you offline?`);\n        }\n\n    getStore().updating.stream = false;\n}\n\nexport const getAllUnread = async (streamId: string, continuation: string = undefined) => {\n    try {\n        do {\n            const options: StreamRequestOptions = {\n            };\n            if (continuation)\n                options.continuation = continuation;\n\n            const stream = await getStream(streamId, 'contents', options);\n\n            // Next time, start from here.\n            continuation = stream.continuation;\n            updateStoreWithStream(stream);\n        } while (continuation);\n    } catch (error) {\n        window.snackHelper.enqueueSnackbar('Background update failed.');\n    }\n\n    window.snackHelper.enqueueSnackbar('Background sync complete.');\n}","import { makeStyles } from \"@material-ui/styles\";\nimport * as React from 'react';\n\nconst useStyles = makeStyles({\n    root: {\n        display: 'flex',\n        justifyContent: 'center'\n    }\n});\n\nexport default props => {\n    const styles = useStyles();\n\n    return <div className={styles.root}>\n        {props.children}\n    </div>\n}","import * as React from 'react';\nimport { useRef, useState } from 'react';\nimport { debounce } from '../services/debounce';\nimport { RootRef } from '@material-ui/core';\n\ninterface Props {\n    getContainer: (node: HTMLElement) => HTMLElement;\n    children: (visible: boolean) => React.ReactNode;\n}\n\nconst isAbove = (container: HTMLElement, element: HTMLElement) => {\n    if (!container || !element) return false;\n\n    const elementRect = element.getBoundingClientRect();\n    const containerRect = container.getBoundingClientRect();\n\n    return elementRect.bottom < containerRect.top;\n}\nexport const ScrollVisibility = (props: Props) => {\n    const elementRef = useRef<HTMLDivElement>(null);\n    const [scrollContainer, setScrollContainer] = useState(null);\n    const [scrollHandler, setScrollHandler] = useState(null);\n    const [above, setAbove] = useState(false);\n\n    React.useEffect(() => {\n        if (!elementRef || !elementRef.current) return;\n\n        // TODO: This doesn't seem to be removing the handler?\n        if (scrollContainer && scrollHandler)\n            scrollContainer.removeEventListener('scroll', scrollHandler);\n        \n        const handler = e => {\n            const newAbove = isAbove(scrollContainer, elementRef.current);\n\n            // Debouncing isn't working, don't trigger rerender.\n            if (newAbove !== above) setAbove(newAbove);\n        };\n\n        const debounced = debounce(handler, 1000);\n\n        const container = props.getContainer(elementRef.current);\n        setScrollContainer(container);\n        setScrollHandler(debounced);\n        container.addEventListener('scroll', debounced, { passive: true })\n        \n        return () => {\n            scrollContainer && scrollHandler && scrollContainer.removeEventListener('scroll', scrollHandler);\n        }\n    }, [props.getContainer, elementRef]);\n\n\n\n    return <RootRef rootRef={elementRef}>\n        {props.children(!above)}\n    </RootRef>;\n}","import { makeStyles } from \"@material-ui/styles\";\nimport * as React from 'react';\n\nconst useStyles = makeStyles({\n    stickyHeader: {\n        position: 'sticky',\n        top: 0\n    }\n});\n\ninterface Props extends React.HTMLProps<HTMLDivElement> {\n}\n\nexport default (props: Props) => {\n    const styles = useStyles();\n    const { children, className, ...rest } = props;\n\n    return <div className={`${className} ${styles.stickyHeader}`} {...rest}>\n        {children}\n    </div>;\n}","import { CircularProgress, Grid, IconButton, Switch, FormControlLabel, LinearProgress } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router';\nimport EntryCard from \"./EntryCard\";\nimport { useStream } from './hooks/stream';\nimport { useStore, isUpdating } from './hooks/store';\nimport AppBarButton from './components/AppBarButton';\nimport { Refresh } from '@material-ui/icons';\nimport { updateStreams, updateStream } from './actions/stream';\nimport { getStream } from './services/store';\nimport Centre from './components/Centre';\nimport { Entry } from './model/entry';\nimport { History } from 'history';\nimport { ScrollVisibility } from './components/ScrollVisibility';\nimport { setUnread } from './actions/marker';\nimport StickyHeader from './components/StickyHeader';\nimport { updateSubscriptions } from './services/subscriptions';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { FixedSizeList } from 'react-window';\n\nconst useStyles = makeStyles({\n  root: {\n  },\n  loadingButton: {\n    color: 'white !important'\n  },\n  loader: {\n    marginBottom: \"10px\",\n  },\n  header: {\n    top: '-10px',\n    zIndex: 1000,\n    margin: '-10px -10px 10px -10px'\n  }\n});\n\ntype Props = RouteComponentProps<any> & {\n  id: string;\n  active: boolean;\n};\n\nconst MarkEntryAsRead = (props: { entry: Entry }) => {\n  useEffect(() => {\n    if (!props.entry || !props.entry.unread) return;\n\n    setUnread(props.entry, false);\n  }, [props.entry && props.entry.id])\n\n  return null;\n}\n\nexport default withRouter((props: Props) => {\n  const streamId = props.id;\n  const stream = useStream(streamId);\n\n  useEffect(() => {\n    if (!streamId || stream && stream.id !== streamId) return;\n    updateSubscriptions();\n  }, [streamId]);\n\n  return <EntriesViewer\n    entries={stream && stream.items}\n    id={streamId}\n    history={props.history}\n    active={props.active} />\n});\n\nconst EntriesViewer = (props: { entries: Entry[], id: string, active: boolean, history: History }) => {\n  const store = useStore();\n  const styles = useStyles(undefined);\n  const markScrolledAsRead = store.settings.markScrolledAsRead;\n\n  const loading = !props.entries || isUpdating('stream');\n  const [entryIdsToKeep, setEntryIdsToKeep] = useState<{ [id: string]: boolean }>({});\n\n  const getSuitableEntries = (keep = {}) => {\n    if (!props.entries)\n      return [];\n\n    const entries = props.entries\n      .filter(e => e && (e.unread || !store.settings.unreadOnly || keep[e.id]));\n\n    entries.sort((a, b) => b.published - a.published);\n    return entries;\n  }\n\n  // When the current viewed stream changes, reset the entries to keep.\n  useEffect(() => {\n    setEntryIdsToKeep(getSuitableEntries().reduce((prev, next) => {\n      prev[next.id] = true;\n      return prev;\n    }, {}));\n  }, [props.id, store.settings.unreadOnly]);\n\n  // Only recalculate suitable entries if something important changes,\n  // not only if we mark articles as read.\n  // In addition, make sure we don't hide any entries in the list if we receive\n  // new ones.\n  const suitableEntries = useMemo(() => getSuitableEntries(entryIdsToKeep),\n    [props.entries && props.entries.length,\n    props.id,\n    store.settings.unreadOnly,\n    store.updating[props.id],\n      entryIdsToKeep]);\n\n  const unreadCount = useMemo(() => suitableEntries.filter(e => e.unread).length, [props.entries]);\n  const readProgress = (1 - unreadCount / suitableEntries.length) * 100;\n  return <div className={styles.root}>\n    {store.settings.unreadOnly\n      && !!suitableEntries.length\n      && <StickyHeader className={styles.header}>\n        <LinearProgress variant='determinate' value={readProgress} color='secondary' />\n      </StickyHeader>}\n    {loading && <Centre>\n      <CircularProgress className={styles.loader} />\n    </Centre>}\n    <Grid spacing={24} container justify='center' wrap='wrap'>\n      {suitableEntries\n        .map(e => <ScrollVisibility key={e.id}\n          getContainer={n => n.parentElement.parentElement.parentElement}>\n          {(visible) => <Grid item lg={3} md={6} sm={6} xs={12} onClick={() => props.history.push(`/entries/${e.id}`)}>\n            <EntryCard entry={e} showingUnreadOnly={store.settings.unreadOnly} />\n            {!visible && markScrolledAsRead && <MarkEntryAsRead entry={e} />}\n          </Grid>}\n        </ScrollVisibility>)}\n    </Grid>\n    {props.active && <>\n      <AppBarButton>\n        <IconButton disabled={loading} onClick={() => updateStream(props.id)}>\n          <Refresh />\n        </IconButton>\n      </AppBarButton>\n      <AppBarButton>\n        <FormControlLabel\n          control={<Switch checked={store.settings.unreadOnly} onClick={() => store.settings.unreadOnly = !store.settings.unreadOnly} />}\n          label=\"Unread\" />\n      </AppBarButton>\n    </>}\n  </div>\n}","import { useEffect } from \"react\";\nimport { Entry } from \"../model/entry\";\nimport { Stream } from \"../model/stream\";\nimport { useStore } from \"./store\";\nimport { executeOnce } from \"./promise\";\n\nexport const useStreams = () => {\n    const store = useStore();\n\n    return store.streams || {};\n}\n\nexport const useStream = (streamId: string): Stream => {\n    const store = useStore();\n    if (!streamId) {\n        return {\n            id: \"\",\n            items: Object.values(store.entries),\n            title: \"All\"\n        };\n    }\n    \n    const streams = store.streams;\n\n    // If it's a feed\n    if (streamId.startsWith('feed/')) {\n        return {\n            id: streamId,\n            items: Object.values(store.entries).filter(e => e.origin.streamId === streamId),\n            title: 'Feed'\n        };\n    }\n\n    // If it's a tag\n    if (streamId.includes('/tag/')) {\n        return {\n            id: streamId,\n            items: Object.values(store.entries).filter(e => e.tags && e.tags.some(t => t.id === streamId)),\n            title: 'Tag'\n        };\n    }\n    const stream = streams[streamId];\n\n    return stream\n        ? {\n            ...stream,\n            items: stream.items.map(i => store.entries[i])\n        }\n        : undefined;\n}\n\nexport const useEntries = (): Entry[] => {\n    const store = useStore();\n    return Object.values(store.entries || {});\n}\n\nexport const useEntry = (entryId: string): Entry => {\n    const entries = useEntries();\n    return entries[entryId];\n}\n\nexport const useFeeds = (feedId: string): Entry[] => {\n    const entries = useEntries();\n    return entries.filter(e => e.origin.streamId === feedId);\n}","import { Stream } from '../model/stream';\nimport { makeRequest } from './common';\nimport { Subscription } from '../model/subscription';\nconst endpoint = '/search/feeds'\n\nexport interface SearchRequestOptions {\n    count?: number;\n    locale?: string;\n}\n\nexport const searchFeeds = async (query: string, options?: SearchRequestOptions): Promise<Subscription[]> => {\n    const result = await makeRequest<{ results: Subscription[] }>(`${endpoint}?query=${query}`, options);\n    return result.results;\n}","import * as React from 'react';\nimport { TextField, Card, CardMedia, IconButton } from \"@material-ui/core\"\nimport { useState, useEffect, useCallback } from 'react';\nimport { useStore, getStore } from './hooks/store';\nimport { makeStyles } from '@material-ui/styles';\nimport { Subscription } from './model/subscription';\nimport { Add, Delete } from '@material-ui/icons';\nimport { searchFeeds } from './api/search';\nimport { useDebounce } from 'use-debounce';\nimport { save } from './services/persister';\n\nconst useStyles = makeStyles({\n    content: {\n        padding: '8px',\n        maxWidth: '800px',\n        marginLeft: 'auto',\n        marginRight: 'auto'\n    },\n\n    results: {\n        paddingTop: '8px'\n    },\n\n    result: {\n        padding: '8px'\n    }\n});\nexport const SubscriptionManager = (props) => {\n    const styles = useStyles();\n    const store = useStore();\n    const subscribedTo = new Set(store.subscriptions.map(s => s.id));\n    const isSubscribed = s => subscribedTo.has(s.id)\n\n    const [query, setQuery] = useState(\"@subscribed\");\n    const [debouncedQuery] = useDebounce(query, 200);\n    const [searchResults, setSearchResults] = useState([]);\n\n    // Update search results when typing.\n    useEffect(() => {\n        if (!debouncedQuery) {\n            setSearchResults([]);\n            return;\n        }\n\n        // This is a special query.\n        if (query.startsWith(\"@\"))\n            return;\n\n        searchFeeds(debouncedQuery).then(setSearchResults);\n    }, [debouncedQuery]);\n\n    const subscriptions = query == \"@subscribed\"\n        ? store.subscriptions\n        : searchResults;\n\n    // Toggles whether a subscription is active.\n    const toggleSubscription = useCallback(async subscription => {\n        if (isSubscribed(subscription)) {\n            const newSubs = [...store.subscriptions];\n            const index = newSubs.findIndex(s => s.id === subscription.id);\n            newSubs.splice(index, 1);\n            store.subscriptions = newSubs;\n        } else {\n            store.subscriptions = [...store.subscriptions, subscription];\n        }\n        await save('subscriptions', getStore().subscriptions);\n    }, [store.subscriptions]);\n\n    return <div className={styles.content}>\n        <TextField\n            label=\"Search term or feed url\"\n            variant=\"filled\"\n            fullWidth\n            value={query}\n            onChange={e => setQuery(e.target.value)} />\n\n        <div className={styles.results}>\n            {subscriptions.map(s => <SubscriptionView\n                key={s.id}\n                subscription={s}\n                isSubscribed={isSubscribed(s)}\n                toggleSubscription={toggleSubscription}/>)}\n        </div>\n    </div>\n}\n\nconst useCardStyles = makeStyles({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        marginBottom: '8px'\n    },\n    icon: {\n        width: 150,\n        alignSelf: 'stretch'\n    },\n    content: {\n        marginLeft: '8px',\n        flexGrow: 1\n    },\n    controls: {\n        marginLeft: '8px'\n    }\n});\n\nconst SubscriptionView = (props: {\n    subscription: Subscription,\n    isSubscribed?: boolean,\n    toggleSubscription: (s: Subscription) => void\n}) => {\n    const styles = useCardStyles();\n\n    return <Card className={styles.root}>\n        <CardMedia className={styles.icon}\n            image={props.subscription.visualUrl || props.subscription.iconUrl}/>\n        <div className={styles.content}>\n            {props.subscription.title}\n        </div>\n        <div className={styles.controls}>\n            <IconButton onClick={() => props.toggleSubscription(props.subscription)}>\n                {props.isSubscribed\n                    ? <Delete/>\n                    : <Add/>\n                }\n            </IconButton>\n        </div>\n    </Card>\n}","import { MuiThemeProvider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport { SnackbarProvider } from 'notistack';\nimport React, { useEffect, useMemo } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport AppBar from './AppBar';\nimport { SnackbarHelper } from './components/SnackbarHelper';\nimport EntryViewer from './EntryViewer';\nimport { useStore } from './hooks/store';\nimport RouteManager, { AppRoute } from './RouteManager';\nimport SettingsPage from './SettingsPage';\nimport StreamViewer from './StreamViewer';\nimport { buildTheme } from './theme';\nimport { SubscriptionManager } from './SubscriptionManager'\n\nconst useStyles = makeStyles(theme => {\n  return {\n    root: {\n      width: '100vw',\n      height: '100vw',\n    }\n  }\n});\n\nconst routes: AppRoute[] = [\n  {\n    prefix: '/settings/',\n    render: () => <SettingsPage />\n  },\n  {\n    prefix: '/stream/',\n    render: (id, active) => <StreamViewer id={id} active={active} />\n  },\n  {\n    prefix: '/entries/',\n    render: (id, active) => <EntryViewer id={id} active={active} />\n  }\n];\n\nexport const App = (props) => {\n  const styles = useStyles({});\n  const store = useStore();\n\n  const theme = useMemo(() => {\n    return buildTheme(store.settings);\n  }, [store.settings.fontSize]);\n\n  return <BrowserRouter>\n    <MuiThemeProvider theme={theme}>\n      <SnackbarProvider>\n        <SnackbarHelper />\n        <div className={styles.root}>\n          <AppBar />\n          <Switch>\n            <Route path=\"/subscriptions\">\n              <SubscriptionManager />\n            </Route>\n            <RouteManager routes={routes} />\n          </Switch>\n        </div>\n      </SnackbarProvider>\n    </MuiThemeProvider>\n  </BrowserRouter>;\n};\n\nexport default App;\n","import { createMuiTheme } from \"@material-ui/core\";\nimport { Settings } from \"./types/RecollectStore\";\n\nexport const buildTheme = (settings: Settings) => createMuiTheme({\n    palette: {\n        type: settings.darkMode ? 'dark' : 'light',\n        primary: {\n            main: '#2BB24C'\n        },\n    },\n    typography: {\n        fontSize: 8 + (settings.fontSize * 2)\n    }\n});","import { store as s } from 'react-recollect';\nimport { Stream } from '../model/stream';\nimport { Subscription } from '../model/subscription';\nimport { StoreDef, StoreStream } from '../types/RecollectStore';\nimport { Entry } from '../model/entry';\nimport { getStore } from '../hooks/store';\nimport { saveChildren, loadStore } from './persister';\nimport { loadSettings } from '../actions/settings';\nconst store = s as StoreDef;\n \nexport const initStore = () => {\n    store.streams = {};\n    store.entries = {};\n    store.updating = {\n        categories: false,\n        stream: false,\n    };\n    store.settings = loadSettings();\n    store.current = {\n    };\n    store.subscriptions = [];\n\n    loadStore();\n\n    // Include our fake stream by default.\n    // setAllStreams(store.profile.id, require('../fakeStream.json'));\n    // store.collections = require('../fakeCollections.json');\n}\n\nexport const getStream = (streamId: string): Stream => {\n    const store = getStore();\n    const stream = store.streams[streamId];\n    if (!stream) return;\n    return {\n        ...stream,\n        items: stream.items\n            .map(i => store.entries[i])\n            .filter(e => e)\n            .filter(e => e.unread || !store.settings.unreadOnly)\n    };\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { initStore } from './services/store';\nimport * as serviceWorker from './serviceWorker';\nimport { updateSubscriptions } from './services/subscriptions';\n\n// Make sure our store is initialized.\ninitStore();\n\n// Fetch subscriptions.\nupdateSubscriptions();\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}