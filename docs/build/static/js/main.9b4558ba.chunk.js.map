{"version":3,"sources":["api/common.ts","api/streams.ts","components/CollapsableListItem.tsx","CollectionView.tsx","hooks/promise.ts","hooks/store.ts","services/persister.ts","api/collections.ts","actions/collection.ts","actions/profile.ts","api/profile.ts","hooks/profile.ts","CollectionsView.tsx","hooks/collections.ts","AppDrawer.tsx","AppBar.tsx","components/SnackbarHelper.tsx","services/entry.ts","api/entry.ts","actions/entry.ts","components/AppBarButton.tsx","api/markers.ts","actions/marker.ts","MarkerButton.tsx","hooks/callbacks.ts","EntryViewer.tsx","hooks/responsive.ts","components/SwipeableView.tsx","RouteManager.tsx","services/debounce.ts","actions/settings.ts","SettingsPage.tsx","EntryCard.tsx","services/store.ts","actions/stream.ts","components/Centre.tsx","components/ScrollVisibility.tsx","components/StickyHeader.tsx","StreamViewer.tsx","hooks/stream.ts","App.tsx","theme.ts","serviceWorker.ts","index.tsx"],"names":["feedlyQueryString","params","fixedCase","key","queryString","stringify","makeRequest","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","url","joiner","requestUrl","response","wrap","_context","prev","next","length","includes","concat","feedlyConfig","feedlyUrl","fetch","method","headers","Authorization","accessToken","sent","ok","abrupt","json","stop","this","_x","_x2","apply","arguments","defaultOptions","unreadOnly","getStream","streamId","type","options","_args","undefined","objectSpread","getAllId","userId","getSavedId","useStyles","makeStyles","@global",".nested-list *","paddingLeft","CollapsableListItem","props","_useState","useState","defaultOpen","_useState2","slicedToArray","open","setOpen","react","header","toggle","core_index_es","in","timeout","unmountOnExit","disablePadding","className","children","SubscriptionView","withRouter","button","onClick","history","push","feed","feedId","title","p","collection","id","icons_index_es","label","e","stopPropagation","feeds","map","s","executeOnce","execute","_len","keys","Array","_key","useEffect","updaters","currentStore","defaultStore","getStore","window","afterChange","event","store","prevStore","forEach","u","useStore","setStore","updater","addUpdater","index","indexOf","splice","removeUpdater","localForage","save","value","setItem","JSON","saveEntry","entry","saveChildren","getItem","then","t0","Set","getChildKeys","t1","toConsumableArray","k","add","from","get","_ref2","_callee2","_context2","parse","call","_ref3","_callee3","parentKey","_context3","isArray","_x3","batchedLoad","_ref4","_callee4","storeKey","batchSize","i","results","_args4","_context4","Promise","all","slice","Math","min","reduce","defineProperty","_x4","load","_ref5","_callee5","_context5","_x5","loadStore","_ref6","_callee6","_context6","getCollections","updateCollections","shouldFetch","collections","updating","snackHelper","enqueueSnackbar","updateProfile","force","profile","useProfile","ManualEntry","categoryId","text","CollectionsView","categories","values","useCollections","c","CollectionView","AppDrawer","react_default","createElement","React","cloneElement","trigger","onClose","style","width","margin","variant","primary","createContext","pageActions","flex","display","flexDirection","AppBar","styles","position","color","SnackbarHelper","withSnackbar","getEntryByline","engagement","origin","relativeDate","Date","published","getEntry","entryId","entries","encodeURIComponent","updateEntry","AppBarButton","appBar","setAppBar","document","getElementById","ReactDOM","createPortal","updateMarkers","marker","endpoint","Content-Type","body","updateUnread","items","unread","_args2","action","entryIds","updateSaved","saved","_args3","setUnread","setSaved","profileId","tagId","getSavedTag","tags","filter","on","off","EntryReadButton","toggleRead","useCallback","EntrySavedButton","some","endsWith","toggleSaved","useDoubleTap","callback","change","requiredTaps","delay","taps","setTimeout","useNTap","useOnScrollEnd","handler","handlers","isScrolling","setScrolling","_useState3","_useState4","scrollTimeout","setScrollTimeout","clearTimeout","onStart","onScroll","newScrollTimeout","onEnd","useOnScroll","root","maxWidth","marginLeft","marginRight","article img","article figure","isPhone","theme","useTheme","unstable_useMediaQuery","breakpoints","up","valueOf","useIsPhone","domElement","useRef","shouldMarkAsRead","settings","markOpenedAsRead","maybeMarkAsRead","ref","current","parentElement","scrollTo","scrollToTop","doubleTap","doubleTapToCloseArticles","goBack","getSelection","removeAllRanges","content","detail","summary","getEntryContent","article","subheader","component","dangerouslySetInnerHTML","__html","active","MarkerButton_EntryReadButton","MarkerButton_EntrySavedButton","SwipeableView","swipeableView","activeIndex","setActiveIndex","isNaN","Error","child","offsetLeft","selectedChild","element","closestDistance","Infinity","distance","abs","scrollLeft","onSwiped","scrollSnapType","overflowX","scrollbarWidth","flexShrink","scrollSnapAlign","scrollSnapStop","RouteSetter","Route","path","prefix","location","pathname","substr","setActive","activeSlide","setActiveSlide","slideIndex","routes","findIndex","r","SwipeableView_SwipeableView","n","height","overflow","paddingTop","render","RouteManager_RouteSetter","exact","debounce","f","time","args","defaultSettings","markScrolledAsRead","fontSize","darkMode","debouncedSaveSettings","localStorage","console","log","updateSettings","name","slider","SettingsPage","onSwitchChange","setting","target","onFontSizeChange","secondary","checked","onChange","lab_index_es","max","step","paper","cursor","card","maxHeight","read","tint","background","opacity","top","left","bottom","right","EntryCard","visualUrl","visual","getEntrySummary","tintGray","showingUnreadOnly","src","setAllStreams","allStream","_streamUpdate","uncategorizedId","savedId","entryUpdate","streamUpdate","lastFetched","now","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","category","oldStream","streams","err","return","_arr","_i","updateStreams","stream","justifyContent","Centre","ScrollVisibility","elementRef","scrollContainer","setScrollContainer","scrollHandler","setScrollHandler","_useState5","_useState6","above","setAbove","removeEventListener","debounced","newAbove","container","elementRect","getBoundingClientRect","containerRect","isAbove","getContainer","addEventListener","passive","rootRef","stickyHeader","StickyHeader","rest","objectWithoutProperties","assign","loadingButton","loader","marginBottom","zIndex","MarkEntryAsRead","startsWith","t","useStream","StreamViewer_EntriesViewer","EntriesViewer","loading","suitableEntries","useMemo","readProgress","spacing","justify","ScrollVisibility_ScrollVisibility","visible","item","lg","md","sm","xs","StreamViewer_MarkEntryAsRead","Fragment","disabled","control","StreamViewer","EntryViewer","App","createMuiTheme","palette","main","typography","BrowserRouter","core_styles","build","RouteManager","Boolean","hostname","match","loadSettings","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9b4558ba.chunk.js","sourcesContent":["import queryString from \"querystring\";\nimport feedlyConfig from '../feedly.json';\n\nconst bypassCorsUrl = 'https://cors-anywhere.herokuapp.com/';\n\nexport const feedlyQueryString = (params: Object): string => {\n    const fixedCase = {};\n    for (const key in params || {}) {\n        fixedCase[key] = params[key];\n    }\n\n    return queryString.stringify(fixedCase);\n}\n\nexport const makeRequest = async <T>(url: string, params?: Object): Promise<T> => {\n    const queryString = feedlyQueryString(params);\n    const joiner = queryString.length === 0\n        ? ''\n        : url.includes('?')\n            ? '&'\n            : '?';\n\n    const requestUrl = `${feedlyConfig.feedlyUrl}${url}${joiner}${queryString}`;\n\n    // TODO: Use a custom cors proxy, this should not be in production.\n    const response = await fetch(`${bypassCorsUrl}${requestUrl}`, {\n        method: 'GET',\n        headers: {\n            'Authorization': `OAuth ${feedlyConfig.accessToken}`\n        }\n    });\n\n    // Make sure error handling is triggered if the response status is not ok.\n    if (!response.ok)\n        throw response;\n\n    return response.json();\n}\n\nexport const makePostRequest = (endpoint: string, params: Object) => {\n    return fetch(`${bypassCorsUrl}${feedlyConfig.feedlyUrl}${endpoint}`, {\n        method: 'POST',\n        headers: {\n            'Authorization': `OAuth ${feedlyConfig.accessToken}`,\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(params)\n    });\n}","import { Stream } from '../model/stream';\nimport { makeRequest } from './common';\nconst endpoint = '/streams'\n\ninterface StreamRequestOptions {\n    count?: number;\n    ranked?: 'oldest' | 'newest';\n    unreadOnly?: boolean;\n    newerThan?: number;\n    continuation?: string;\n}\n\nconst defaultOptions = {\n    unreadOnly: true,\n}\n\nexport const getStream = async (streamId: string, type: 'contents' | 'id' = 'contents', options?: StreamRequestOptions): Promise<Stream> => {\n    return makeRequest<Stream>(`${endpoint}/${type}?streamId=${streamId}`, { ...defaultOptions, ...options });\n}\n\nexport const getAllStreams = async (userId: string, unreadOnly: boolean = true): Promise<Stream> => {\n    return getStream(getAllId(userId), 'contents', { unreadOnly });\n}\n\nexport const getAllId = (userId: string) => `user/${userId}/category/global.all`;\n\nexport const getUncategorizedId = (userId: string) => {\n    return `user/${userId}/category/global.uncategorized`;\n}\n\nexport const getSavedId = (userId: string) => `user/${userId}/tag/global.saved`;","import { Collapse, List, ListItem } from '@material-ui/core';\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles(({\n    \"@global\": {\n        \".nested-list *\": {\n            paddingLeft: '40px'\n        }\n    }\n}));\n\ninterface Props {\n    defaultOpen?: boolean;\n    children?: React.ReactNode[] | React.ReactNode;\n    header: (props: { open: boolean, toggle: () => void }) => JSX.Element;\n}\n\nexport default (props: Props) => {\n    useStyles();\n\n    const [open, setOpen] = useState(props.defaultOpen);\n    return <>\n        {props.header({ open, toggle: () => setOpen(!open) })}\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <List disablePadding className=\"nested-list\">\n                {props.children}\n            </List>\n        </Collapse>\n    </>;\n}","import { ExpansionPanel, ExpansionPanelDetails, ExpansionPanelSummary, ListItem, ListItemText, ListItemIcon } from '@material-ui/core';\nimport { ExpandMore, RssFeed, ExpandLess } from '@material-ui/icons';\nimport * as React from 'react';\nimport CollapsableListItem from './components/CollapsableListItem';\nimport { Subscription } from './model/subscription';\nimport { withRouter, RouteComponentProps } from 'react-router';\nimport { Collection, Feed } from './model/collection';\n\ninterface Props extends RouteComponentProps<{}> {\n    collection: Collection;\n}\n\n\nconst SubscriptionView = withRouter((props: { feed: Feed } & RouteComponentProps<any>) => {\n\n    return <ListItem button onClick={() => props.history.push(`/stream/${props.feed.feedId}`)}>\n        <ListItemText>\n            {props.feed.title}\n        </ListItemText>\n    </ListItem>\n})\n\nexport default withRouter((props: Props) => {\n    return <CollapsableListItem\n        defaultOpen={true}\n        header={p => <ListItem button onClick={() => props.history.push(`/stream/${props.collection.id}`)}>\n            <ListItemIcon>\n                <RssFeed />\n            </ListItemIcon>\n            <ListItemText>{props.collection.label}</ListItemText>\n            <div onClick={e => {\n                p.toggle();\n                e.stopPropagation();\n            }}>\n                {p.open ? <ExpandLess /> : <ExpandMore />}\n            </div>\n        </ListItem>}>\n        {props.collection.feeds.map(s => <SubscriptionView key={s.id} feed={s} />)}\n    </CollapsableListItem>\n})","import { useEffect, useState } from \"react\";\nimport { useForeUpdate } from \"./effects\";\n\nexport const useResult = <T>(promise: Promise<T>) => {\n    const [result, setResult] = useState(undefined);\n\n    useEffect(() => {\n        if (result) return;\n        \n        promise.then(setResult);\n    });\n\n    return result;\n}\n\nexport const executeOnce = <T>(execute: (...args) => Promise<T>, ...keys) => {\n    useEffect(() => {\n        execute(...keys);\n    }, [...keys]);\n}\n\ninterface Cache<T> {\n    updating: boolean;\n    lastArgs: any[];\n    state: T;\n}\n\nconst elementsChanged = (l1: any[], l2: any[]) => l1.length !== l2.length || l1.some((item, index) => l2[index] !== item);\nexport const makeUpdatableSharedCache = <T>(fetcher: (...args) => Promise<T>, initialValue?: T) => {\n    const cache: Cache<T> = {\n        updating: false,\n        lastArgs: [],\n        state: initialValue\n    };\n\n    const updaters: (() => void)[] = [];\n    const update = async (...args) => {\n        if (cache.updating) return;\n\n        const result = await fetcher(...args);\n        cache.state = result;\n        updaters.forEach(u => u());\n\n        cache.lastArgs = args;\n        cache.updating = false;\n    };\n\n    return (...args): T => {\n        // If we don't have any data, or our args have changed\n        if (!cache.state\n            || elementsChanged(args, cache.lastArgs)) {\n            update(...args)\n        }\n\n        // Manage registering for update\n        const forceUpdate = useForeUpdate();\n        useEffect(() => {\n            updaters.push(forceUpdate);\n            return () => {\n                const index = updaters.indexOf(forceUpdate);\n                updaters.splice(index, 1);\n            };\n        })\n\n        return cache.state;\n    };\n\n}","import { useEffect, useState } from 'react';\nimport { afterChange, store as defaultStore, Store } from 'react-recollect';\nimport { makeUpdatableSharedCache } from './promise';\n\ntype Updater = (store: Store) => void;\n\nconst updaters: Updater[] = [];\nconst addUpdater = (updater: Updater) => {\n    updaters.push(updater);\n    return updater;\n}\n\nconst removeUpdater = (updater: Updater) => {\n    const index = updaters.indexOf(updater);\n    updaters.splice(index, 1);\n}\n\nlet currentStore = defaultStore;\nexport const getStore = () => currentStore;\n(window as any).getStore = getStore;\n\nafterChange(event => {\n    if (event.store === event.prevStore)\n      return;\n\n    currentStore = event.store;\n    updaters.forEach(u => u(event.store));\n});\n\nexport const useStore = () => {\n    const [store, setStore] = useState(defaultStore);\n\n    useEffect(() => {\n        const updater = addUpdater(setStore);\n        return () => {\n            removeUpdater(updater);\n        };\n    });\n\n    return store;\n}\n\nexport const makeStoreCache = <T>(fetcher: (store: Store) => T | Promise<T>, onFetched: (store: Store, value: T) => void) => {\n    const storeFetcher = async () => {\n        const result = await fetcher(currentStore);\n        onFetched(currentStore, result);\n        return result;\n    };\n\n    const useCache = makeUpdatableSharedCache(storeFetcher);\n    return (lastUpdate?: number) => {\n        const cached = useCache(lastUpdate);\n        return cached;\n    }\n}\n\nexport const isUpdating = (id: string) => currentStore.updating[id];","import localForage from 'localforage';\nimport { Store } from 'react-recollect';\nimport { getStore } from '../hooks/store';\nimport { Entry } from '../model/entry';\n\n(window as any)['localForage'] = localForage;\n\nexport const entriesPrefix: keyof Store = 'entries';\n\nexport const save = (key: string, value: object) => {\n    return localForage.setItem(key, JSON.stringify(value));\n}\n\nexport const saveEntry = (entry: Entry) => {\n    return save(`${entriesPrefix}.${entry.id}`, entry);\n}\n\nexport const saveChildren = (key: string, value: object) => {\n    return localForage.getItem<string[]>(key)\n        .then(async keys => new Set(await getChildKeys(key)))\n        .then(keys => [\n            ...Object.keys(value).map(k => {\n                keys.add(k);\n                return save(`${key}.${k}`, value[k])\n            }),\n            save(key, Array.from(keys))\n        ]);\n};\n\nconst get = async (key: string) => JSON.parse(await localForage.getItem(key));\n\nconst getChildKeys = async (parentKey: string) => {\n    const keys = await get(parentKey);\n    return Array.isArray(keys) ? keys : [];\n};\n\nconst batchedLoad = async (storeKey: keyof Store, batchSize = 20) => {\n    const keys = await getChildKeys(storeKey);\n    for (let i = 0; i < keys.length; i += batchSize) {\n        const results = await Promise.all(keys.slice(i, Math.min(i + batchSize, keys.length))\n            .map(key => get(`${storeKey}.${key}`)));\n        getStore()[storeKey] = {\n            ...getStore()[storeKey],\n            ...results.reduce((prev, next) => ({ ...prev, [(next as any).id]: next }), {})\n        };\n    }\n}\n\nexport const load = async (storeKey: keyof Store) => {\n    const value = await get(storeKey);\n    getStore[storeKey] = value;\n    return value;\n}\n\nexport const loadEntry = (id: string): Promise<Entry> => get(`${entriesPrefix}.${id}`) as Promise<Entry>;\n\nexport const loadStore = async () => {\n    await Promise.all([\n        batchedLoad('entries'),\n        batchedLoad('streams')\n    ]);\n}","import { Collection } from \"../model/collection\";\nimport { makeRequest } from \"./common\";\n\nconst endpoint = '/collections';\n\nexport const getCollections = async (): Promise<Collection[]> => {\n    return makeRequest<Collection[]>(`${endpoint}/`);\n}","import { getStore } from \"../hooks/store\";\nimport { updateProfile } from \"./profile\";\nimport { getEntry } from \"../api/entry\";\nimport { load, save } from \"../services/persister\";\nimport { getCollections } from \"../api/collections\";\n\nconst updatingName = 'collections';\nexport const updateCollections = async () => {\n    if (getStore().updating[updatingName]) return;\n\n    getStore().updating[updatingName] = true;\n\n    // Only fetch once per session.\n    const shouldFetch = !getStore().collections;\n\n    let collections = await load('collections');\n    if (collections)\n        getStore().collections = collections;\n\n    // Update from network.\n    if (shouldFetch) {\n        try {\n            collections = await getCollections();\n            getStore().collections = collections;\n\n            await save('collections', collections)\n        } catch {\n            window.snackHelper.enqueueSnackbar('Unable to fetch collections. You appear to be offline.');\n            getStore().collections = [];\n        }\n    }\n\n    delete getStore().updating[updatingName];\n}","import { Store } from \"react-recollect\";\nimport { getProfile } from \"../api/profile\";\nimport { getStore } from \"../hooks/store\";\nimport { save, load } from \"../services/persister\";\n\nexport const updateProfile = async (force: boolean = false) => {\n    if (getStore().updating.profile) return;\n\n    getStore().updating.profile = true;\n\n    // If we aren't forcing the load, try and load the profile from disk.\n    if (!force)\n        getStore().profile = await load('profile');\n\n    // If the load failed, load the profile from the network and save to disk.\n    if (!getStore().profile) {\n        getStore().profile = await getProfile();\n        await save('profile', getStore().profile);\n    }\n\n    getStore().updating.profile = false;\n}","import { makeRequest } from './common';\nimport { Profile } from '../model/profile';\nconst profileUrl = '/profile';\n\nexport const getProfile = () => {\n    return makeRequest<Profile>(profileUrl);\n}","import { Profile } from \"../model/profile\";\nimport { useStore, makeStoreCache } from \"./store\";\nimport { executeOnce } from \"./promise\";\nimport { getProfile } from \"../api/profile\";\nimport { useEffect } from \"react\";\nimport { updateProfile } from \"../actions/profile\";\n\nexport const useProfile = (): Profile => {\n    const store = useStore();\n\n    useEffect(() => {\n        if (store.profile) return;\n        updateProfile();\n    }, []);\n\n    return store.profile;\n}","import * as React from 'react';\nimport CollectionView from './CollectionView';\nimport { useCollections } from './hooks/collections';\nimport { ListItem, ListItemText, ListItemIcon } from '@material-ui/core';\nimport { RssFeed } from '@material-ui/icons';\nimport { withRouter, RouteComponentProps } from 'react-router';\nimport { useProfile } from './hooks/profile';\nimport { getAllId, getSavedId } from './api/streams';\nimport { useStore } from './hooks/store';\n\nconst ManualEntry = withRouter((props: RouteComponentProps & { text: string, categoryId: string }) => {\n    return <ListItem onClick={() => props.history.push(`/stream/${props.categoryId}`)} button>\n        <ListItemIcon>\n            <RssFeed />\n        </ListItemIcon>\n        <ListItemText>{props.text}</ListItemText>\n    </ListItem>;\n});\n\nexport default (props) => {\n    const profile = useProfile();\n    const categories = useCollections();\n\n    return <>\n        <ManualEntry text=\"All\" categoryId={getAllId(profile && profile.id)} />\n        <ManualEntry text=\"Saved\" categoryId={getSavedId(profile && profile.id)} />\n        {categories.map(c => <CollectionView collection={c} key={c.id} />)}\n    </>;\n}","import { useEffect, useState } from \"react\";\nimport { getSubscriptions } from \"../api/subscription\";\nimport { Category } from \"../model/category\";\nimport { Subscription } from \"../model/subscription\";\nimport { useStore } from \"./store\";\nimport { executeOnce } from \"./promise\";\nimport { Collection } from \"../model/collection\";\nimport { getCollections } from \"../api/collections\";\nimport { updateCollections } from \"../actions/collection\";\n\nexport const useCollections = (): Collection[] => {\n    const store = useStore();\n\n    // If we haven't cached the collections, get them from the internet.\n    executeOnce(updateCollections);\n\n    return store.collections\n        ? Object.values(store.collections)\n        : [];\n}","import { Drawer, List, ListItem, ListItemIcon, ListItemText, Typography } from \"@material-ui/core\";\nimport { Person } from '@material-ui/icons';\nimport React, { useState } from 'react';\nimport CategoriesView from \"./CollectionsView\";\n\nexport default (props: { trigger: JSX.Element }) => {\n    const [open, setOpen] = useState(false);\n\n    return <div>\n        {React.cloneElement(props.trigger, { onClick: () => setOpen(true) })}\n        <Drawer open={open} onClose={() => setOpen(false)}>\n            <div style={{ width: '250px', margin: '10px' }}>\n                <Typography variant='h5'>\n                    Progrssive Reader\n                </Typography>\n                <List>\n                    <ListItem button>\n                        <ListItemIcon>\n                            <Person />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Login\" />\n                    </ListItem>\n                </List>\n                <CategoriesView/>\n            </div>\n        </Drawer>\n    </div>;\n}","import React, { useState, useEffect } from 'react';\nimport { Toolbar, AppBar, IconButton, Typography } from '@material-ui/core';\nimport { Menu } from '@material-ui/icons';\nimport AppDrawer from './AppDrawer';\nimport { makeStyles } from '@material-ui/styles';\n\nexport const AppBarContext: React.Context<React.Ref<any>> = React.createContext(undefined);\n\nconst useStyles = makeStyles({\n    pageActions: {\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'row-reverse',\n        width: '100%'\n    }\n})\n\nexport default (props) => {\n    const styles = useStyles();\n\n    return <AppBar position=\"static\" color=\"primary\">\n            <Toolbar>\n                <AppDrawer trigger={\n                    <IconButton>\n                        <Menu />\n                    </IconButton>} />\n                <Typography variant=\"title\">Progrssive</Typography>\n                <div className={styles.pageActions} id=\"app-bar-button-container\">\n\n                </div>\n            </Toolbar>\n        </AppBar>;\n}","import { withSnackbar } from \"notistack\";\nimport * as React from 'react';\nimport \"../types/Window\";\n\nexport const SnackbarHelper = withSnackbar((props) => {\n    window.snackHelper = props;\n    return null;\n});","import { Entry } from \"../model/entry\";\nimport relativeDate from 'tiny-relative-date';\nimport { getSavedId } from \"../api/streams\";\n\nexport const getEntryContent = (entry: Entry) => {\n    const detail = entry.content || entry.summary;\n    return detail && detail.content;\n}\n\nexport const getEntrySummary = (entry: Entry) => entry.summary && entry.summary.content;\n\nexport const getEntryByline = (entry: Entry) => `${entry.engagement ? entry.engagement + ' ' : ''}${entry.origin && entry.origin.title} / ${relativeDate(new Date(entry.published))}`;\n\nexport const getEntryVisualUrl = (entry: Entry) => entry.visual && entry.visual.url;\n\nexport const isSaved = (entry: Entry) => entry.tags && entry.tags.some(e => e.id.endsWith('global.saved'));","import { makeRequest } from \"./common\";\nimport { Entry } from \"../model/entry\";\n\nexport const getEntry = async (entryId: string) => {\n    const entries = await makeRequest<Entry[]>(`/entries/${encodeURIComponent(entryId)}`);\n    return entries[0];\n}","import { getStore } from \"../hooks/store\";\nimport { getEntry } from \"../api/entry\";\nimport { loadEntry } from \"../services/persister\";\n\nexport const updateEntry = async (entryId: string, force: boolean = false) => {\n    if (getStore().updating[entryId]) return;\n    getStore().updating[entryId] = false;\n\n    // If we aren't forcing network, try and load the entry from disk.\n    // Fallback to fetching from the network.\n    const entry = (!force && await loadEntry(entryId))\n        || await getEntry(entryId);\n        \n    const store = getStore();\n    store.entries = {\n        ...store.entries,\n        [entryId]: entry\n    };\n\n    delete store.updating[entryId];\n}","import ReactDOM from \"react-dom\";\nimport React, { useState, useEffect } from 'react';\n\nexport default (props: { children: React.ReactNode }) => {\n    const [appBar, setAppBar] = useState(undefined);\n\n    useEffect(() => {\n        setAppBar(document.getElementById('app-bar-button-container'));\n    }, []);\n\n    if (!appBar) return null;\n    \n    return ReactDOM.createPortal(props.children, appBar);\n}","import { Marker } from \"../model/markers\";\nimport { makePostRequest } from \"./common\";\nimport { Entry } from \"../model/entry\";\n\nconst endpoint = '/markers';\n\nexport const updateMarkers = async (marker: Marker) => {\n    await makePostRequest(endpoint, marker);\n}\n\nexport const updateUnread = async (items: (Entry | Entry[]), unread: boolean = true) => {\n    items = Array.isArray(items) ? items : [items];\n\n    const marker: Marker = {\n        type: 'entries',\n        action: unread ? 'keepUnread' : 'markAsRead',\n        entryIds: items.map(i => i.id)\n    };\n    await updateMarkers(marker);\n};\n\nexport const updateSaved = async (entry: Entry, saved: boolean = true) => {\n    const marker: Marker = {\n        type: 'entries',\n        action: saved ? 'markAsSaved' : 'markAsUnsaved',\n        entryIds: [entry.id]\n    };\n    await updateMarkers(marker);\n}","import { Entry } from \"../model/entry\";\nimport { updateUnread, updateSaved } from \"../api/markers\";\nimport { getSavedId as getSavedTag } from \"../api/streams\";\nimport { saveEntry } from \"../services/persister\";\n\nexport const setUnread = async (entry: Entry, unread: boolean) => {\n    entry.unread = unread;\n    await updateUnread(entry, entry.unread);\n    await saveEntry(entry);\n}\n\nexport const setSaved = async (entry: Entry, saved: boolean, profileId: string) => {\n    const tagId = getSavedTag(profileId);\n    if (!saved) {\n        entry.tags = entry.tags.filter(e => e.id !== tagId);\n    } else {\n        entry.tags = [...(entry.tags || []), {\n            id: tagId,\n            label: 'Saved For Later'\n        }];\n    }\n\n    await updateSaved(entry, saved);\n    await saveEntry(entry);\n}","import * as React from 'react';\nimport { Button, IconButton } from '@material-ui/core';\nimport { Entry } from './model/entry';\nimport { RemoveRedEye, RemoveCircleOutline, StarSharp, StarOutlined, StarBorderOutlined, Star } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/styles';\nimport { useCallback } from 'react';\nimport { isSaved } from './services/entry';\nimport { useProfile } from './hooks/profile';\nimport { setUnread, setSaved } from './actions/marker';\n\nconst useStyles = makeStyles({\n    on: {\n        color: 'white !important'\n    },\n    off: {\n        color: 'gray !important'\n    }\n})\n\ninterface MarkerButtonProps {\n    entry: Entry;\n}\n\nexport const EntryReadButton = (props: MarkerButtonProps) => {\n    const styles = useStyles();\n    const toggleRead = useCallback(() => {\n        setUnread(props.entry, !props.entry.unread);\n    }, [props.entry, props.entry.unread]);\n\n    return <IconButton\n        className={props.entry.unread ? styles.on : styles.off}\n        onClick={toggleRead}>\n        <RemoveRedEye/>\n    </IconButton>;\n}\n\nexport const EntrySavedButton = (props: MarkerButtonProps) => {\n    const styles = useStyles();\n    const profile = useProfile();\n    const saved = isSaved(props.entry);\n    \n    const toggleSaved = useCallback(() => {\n        setSaved(props.entry, !saved, profile.id);\n    }, [props.entry, saved]);\n    return <IconButton className={styles.on}\n        onClick={toggleSaved}>\n        {saved\n            ? <Star/>\n            : <StarBorderOutlined/>}\n    </IconButton>\n}","import * as React from 'react';\nimport { useCallback, useState } from 'react';\n\nexport const useNTap = <Type>(callback: (...args) => void, change: [], requiredTaps = 2, delay = 200) => {\n    // Should be fine here. If we rerender a double tap should be cancelled anyway.\n    let taps = 0;\n    const memoized = useCallback((...args) => {\n        // Increment number of taps\n        taps++;\n        // After timeout, we don't care about this tap.\n        setTimeout(() => taps--, delay);\n\n        // If we've tapped enough times, fire the callback.\n        if (taps >= requiredTaps) callback(...args);\n    }, [...change, requiredTaps, delay]);\n\n    return memoized;\n}\n\nexport const useDoubleTap = (callback: (...args) => void, change: [], delay = 200) => useNTap(callback, change, 2, delay);\n\ninterface ScrollEvents {\n    onStart?: () => void;\n    onEnd?: () => void;\n    onScroll?: () => void;\n}\n\nexport const useOnScroll = (handlers: ScrollEvents) => {\n    const [isScrolling, setScrolling ] = useState(false);\n    const [scrollTimeout, setScrollTimeout] = useState(undefined);\n\n    const memoized = useCallback((e) => {\n        // Reset timeout.\n        clearTimeout(scrollTimeout);\n\n        if (!isScrolling) {\n            setScrolling(true);\n            handlers.onStart && handlers.onStart();\n        }\n\n        handlers.onScroll && handlers.onScroll();\n\n        const newScrollTimeout = setTimeout(() => {\n            setScrolling(false);\n            handlers.onEnd && handlers.onEnd();\n        }, 100);\n        setScrollTimeout(newScrollTimeout);\n    }, [handlers, isScrolling, scrollTimeout]);\n\n    return memoized;\n};\n\nexport const useOnScrollEnd = (handler: () => void) => {\n    return useOnScroll({ onEnd: handler });\n};","import { Card, CardContent, CardHeader, CircularProgress, Typography, Fab } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport * as React from 'react';\nimport { useEffect, useRef } from 'react';\nimport { useIsPhone } from \"./hooks/responsive\";\nimport { useEntry } from \"./hooks/stream\";\nimport { getEntryByline, getEntryContent } from \"./services/entry\";\nimport { getStore, useStore } from \"./hooks/store\";\nimport { updateEntry } from \"./actions/entry\";\nimport AppBarButton from \"./components/AppBarButton\";\nimport { EntryReadButton, EntrySavedButton } from \"./MarkerButton\";\nimport { Add } from \"@material-ui/icons\";\nimport { Entry } from \"./model/entry\";\nimport { setUnread } from \"./actions/marker\";\nimport { useDoubleTap } from \"./hooks/callbacks\";\nimport { withRouter, RouteComponentProps } from \"react-router\";\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: '1000px',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n    },\n    '@global': {\n        'article img': {\n            width: '100%'\n        },\n        'article figure': {\n            margin: 0\n        }\n    }\n});\n\nconst maybeMarkAsRead = (entry: Entry) => {\n    const store = useStore();\n    const shouldMarkAsRead = store.settings.markOpenedAsRead;\n\n    useEffect(() => {\n        if (!entry || !entry.unread || !shouldMarkAsRead) return;\n\n        setUnread(entry, false);\n    }, [entry && entry.id, shouldMarkAsRead]);\n}\n\nconst scrollToTop = (entry: Entry, ref: React.MutableRefObject<any>) => {\n    useEffect(() => {\n        if (!entry || !ref || !ref.current) return;\n\n        ref.current.parentElement.scrollTo(0, 0);\n    }, [entry && entry.id]);\n}\n\ninterface Props extends RouteComponentProps<{}> {\n    id: string,\n    active: boolean\n}\n\nexport default withRouter((props: Props) => {\n    const store = useStore();\n\n    const styles = useStyles();\n    const isPhone = useIsPhone();\n    const domElement = useRef(null);\n\n    const entry = store.entries[props.id];\n\n    useEffect(() => {\n        if (entry || !props.id) return;\n        updateEntry(props.id);\n    }, [props.id]);\n\n    maybeMarkAsRead(entry);\n    scrollToTop(entry, domElement);\n\n    const doubleTap = useDoubleTap((event) => {\n        if (!store.settings.doubleTapToCloseArticles)\n            return;\n\n        props.history.goBack();\n        event.stopPropagation();\n        // Clear potential accidental selection.\n        document.getSelection().removeAllRanges();\n    }, []);\n\n    if (!entry)\n        return <CircularProgress />;\n\n    const content = getEntryContent(entry);\n\n    const article = <>\n        <CardHeader\n            title={entry.title}\n            subheader={getEntryByline(entry)} />\n        {content && <CardContent>\n            <Typography component='small'>\n                <div dangerouslySetInnerHTML={{ __html: content }}></div>\n            </Typography>\n        </CardContent>}\n    </>;\n\n    return <article className={styles.root} ref={domElement} onClick={doubleTap}>\n        {isPhone\n            ? article\n            : <Card>{article}</Card>}\n        {props.active && <>\n            <AppBarButton>\n                <EntryReadButton entry={entry} />\n            </AppBarButton>\n            <AppBarButton>\n                <EntrySavedButton entry={entry} />\n            </AppBarButton>\n        </>}\n    </article>;\n});","import { Theme } from \"@material-ui/core\";\nimport { unstable_useMediaQuery } from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/styles\";\n\nexport const useIsPhone = () => {\n    const theme = useTheme() as Theme;\n    if (!theme) return false;\n    const query = unstable_useMediaQuery(theme.breakpoints.up('md'));\n\n    return !query.valueOf();\n}","import * as React from 'react'\nimport { useEffect, useCallback, useRef, useState } from 'react';\nimport { useOnScrollEnd } from '../hooks/callbacks';\n\ninterface Props {\n    children: React.ReactNode[] | React.ReactNode;\n\n    onSwiped?: (selectedIndex: number) => void;\n    activeIndex?: number;\n}\n\nexport const SwipeableView = (props: Props) => {\n    const children = Array.isArray(props.children) ? props.children : [props.children];\n    \n    const swipeableView = useRef(null);\n    const [activeIndex, setActiveIndex] = useState(props.activeIndex || 0);\n    \n    // Update active index based on props.activeIndex.\n    useEffect(() => {\n        if (isNaN(props.activeIndex) || activeIndex === props.activeIndex)\n          return;\n\n        if (!swipeableView.current)\n          return;\n\n        if (props.activeIndex < 0 || swipeableView.current && props.activeIndex > swipeableView.current.children.length)\n          throw new Error(`Index ${props.activeIndex} out of range!`);\n\n        const child = swipeableView.current.children[props.activeIndex];\n        swipeableView.current.scrollTo(child.offsetLeft, 0);\n\n        setActiveIndex(props.activeIndex);\n    }, [props.activeIndex])\n\n    const onScroll = useOnScrollEnd(() => {\n        const element = swipeableView.current;\n\n        let selectedChild;\n        let closestDistance = Infinity;\n\n        for (let i = 0; i < element.children.length; ++i) {\n            const child: any = element.children[i];\n            const distance = Math.abs(element.scrollLeft - child.offsetLeft);\n            if (distance < closestDistance) {\n                closestDistance = distance;\n                selectedChild = i;\n            }\n        }\n\n        if (selectedChild !== undefined && selectedChild !== activeIndex) {\n            setActiveIndex(selectedChild);\n            props.onSwiped && props.onSwiped(selectedChild);\n        }\n    });\n\n    return <div style={{\n        scrollSnapType: 'x mandatory',\n        overflowX: 'scroll',\n        display: 'flex',\n        scrollbarWidth: 'none',\n    }}\n        onScroll={onScroll}\n        ref={swipeableView}>\n        {children.map((c, i) => <div key={i} style={{\n            flexShrink: 0,\n            scrollSnapAlign: 'start',\n            scrollSnapStop: 'always'\n        } as any}>\n            {c}\n        </div>)}\n    </div>\n}","import * as React from 'react';\nimport { useCallback, useState } from 'react';\nimport { Route, RouteComponentProps, withRouter, Switch } from 'react-router';\nimport { SwipeableView } from './components/SwipeableView';\nimport { useStore } from './hooks/store';\n\nexport interface AppRoute {\n    prefix: string;\n    render: (id?: string, active?: boolean) => React.ReactNode;\n}\n\ninterface Props extends RouteComponentProps<any> {\n    routes: AppRoute[];\n}\n\ninterface RouteSetterProps {\n    prefix: string;\n    setActive: (prefix: string, id: string) => void;\n}\n\nconst RouteSetter = (props: RouteSetterProps) => {\n    return <Route path={`${props.prefix}:id*`}\n        component={(p: RouteComponentProps) => {\n            const location = p.location.pathname;\n            const id = location.substr(props.prefix.length);\n\n            props.setActive(props.prefix, id);\n            return null;\n        }}>\n    </Route>\n}\n\nexport default withRouter((props: Props) => {\n    const store = useStore();\n    const [activeSlide, setActiveSlide] = useState(0);\n\n    const setActive = useCallback((prefix: string, id: string) => {\n        store.current[prefix] = id;\n\n        const slideIndex = props.routes.findIndex(r => r.prefix === prefix);\n        setActiveSlide(slideIndex);\n    }, [props.routes, setActiveSlide]);\n\n    return <>\n        <SwipeableView\n            activeIndex={activeSlide}\n            onSwiped={(n) => {\n            if (n === activeSlide) return;\n\n            const prefix = props.routes[n].prefix;\n            const path = store.current[prefix];\n\n            setActiveSlide((n + 1) % 2);\n            props.history.push(`${prefix}${path || ''}`)\n        }}>\n            {props.routes.map((r, i) => <div\n                style={{ width: '100vw', height: '90vh', overflow: 'hidden auto', paddingTop: '10px' }}\n                key={r.prefix}>\n                {r.render(store.current[r.prefix], activeSlide === i)}\n            </div>)}\n        </SwipeableView>\n        {props.routes.map(r => <RouteSetter key={r.prefix} prefix={r.prefix} setActive={setActive}/>)}\n        <Route path='/' exact={true} component={() => {\n            setActiveSlide(1);\n            return null;\n        }}/>\n    </>\n});","export const debounce = (f: (...args) => void, time: number) => {\n    let timeout;\n\n    const invoke = (...args) => {\n        clearTimeout(timeout);\n        timeout = setTimeout(() => f(...args), time);\n    }\n    \n    return invoke;\n}","import { Settings } from \"../types/RecollectStore\";\nimport { getStore } from \"../hooks/store\";\nimport { debounce } from \"../services/debounce\";\n\nconst defaultSettings: Settings = {\n    markOpenedAsRead: true,\n    markScrolledAsRead: true,\n    doubleTapToCloseArticles: true,\n    unreadOnly: true,\n    fontSize: 3,\n    darkMode: false\n}\n\nconst saveSettings = (settings: Settings) => {\n    window.localStorage.setItem('settings', JSON.stringify(settings));\n    console.log('saved settings!');\n}\nconst debouncedSaveSettings = debounce(saveSettings, 1000);\n\nexport const updateSettings = <T extends keyof Settings>(name: T, value: Settings[T]) => {\n    getStore().settings[name] = value;\n    debouncedSaveSettings(getStore().settings);\n}\n\nexport const loadSettings = () => {\n    const json = window.localStorage.getItem('settings');\n    return json ? JSON.parse(json) as Settings : defaultSettings;\n}","import * as React from 'react';\nimport { List, ListItem, ListItemText, ListItemSecondaryAction, Switch, Divider } from '@material-ui/core';\nimport { Slider } from '@material-ui/lab';\nimport { makeStyles } from '@material-ui/styles';\nimport { getStore, useStore } from './hooks/store';\nimport { updateSettings } from './actions/settings';\nimport { useCallback } from 'react';\n\nconst useStyles = makeStyles({\n    slider: {\n        width: '48px !important'\n    }\n});\n\nexport default (props) => {\n    const styles = useStyles();\n    const store = useStore();\n\n    const onSwitchChange = React.useCallback((e: React.ChangeEvent<HTMLInputElement>, value: boolean) => {\n        const setting = e.target['name'];\n        updateSettings(setting as any, value)\n    }, []);\n\n    const onFontSizeChange = useCallback((e: React.ChangeEvent<{}>, value: any) => {\n        updateSettings('fontSize', value);\n    }, []);\n\n    return <div>\n        <List>\n            <ListItem>\n                <ListItemText\n                    primary='Read opened articles'\n                    secondary='Marks articles as read when you open them.' />\n                <ListItemSecondaryAction>\n                    <Switch\n                        checked={store.settings.markOpenedAsRead}\n                        name='markOpenedAsRead'\n                        onChange={onSwitchChange} />\n                </ListItemSecondaryAction>\n            </ListItem>\n            <ListItem>\n                <ListItemText\n                    primary='Auto mark as read'\n                    secondary='Marks articles as read when you scoll past them.' />\n                <ListItemSecondaryAction>\n                    <Switch checked={store.settings.markScrolledAsRead}\n                        name='markScrolledAsRead'\n                        onChange={onSwitchChange} />\n                </ListItemSecondaryAction>\n            </ListItem>\n            <ListItem>\n                <ListItemText\n                    primary='Double tap to close articles'\n                    secondary='Whether articles can be closed by double tapping them.' />\n                <ListItemSecondaryAction>\n                    <Switch checked={store.settings.doubleTapToCloseArticles}\n                        name='doubleTapToCloseArticles'\n                        onChange={onSwitchChange}/>\n                </ListItemSecondaryAction>\n            </ListItem>\n            <Divider />\n            <ListItem>\n                <ListItemText\n                    primary=\"Article Text Size\"\n                    secondary=\"Controls the size of the article text\" />\n                <ListItemSecondaryAction>\n                    <Slider\n                        className={styles.slider}\n                        min={1}\n                        max={5}\n                        step={1}\n                        onChange={onFontSizeChange}\n                        value={store.settings.fontSize} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        </List>\n    </div>;\n}","import { Card, CardContent, CardHeader, CardMedia, Paper, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport React from 'react';\nimport { Entry } from \"./model/entry\";\nimport { getEntryByline, getEntrySummary, getEntryVisualUrl } from \"./services/entry\";\n\nconst useStyles = makeStyles({\n    paper: {\n        cursor: 'pointer',\n        position: 'relative'\n    },\n    card: {\n        maxHeight: '500px'\n    },\n    read: {\n        color: '#F0F0F0 !important'\n    },\n    unread: {\n\n    },\n    tint: {\n        background: '#FFFFFF',\n        opacity: 0.6,\n        top: '0',\n        left: '0',\n        bottom: '0',\n        right: '0',\n        position: 'absolute'\n    }\n});\n\nexport default (props: { entry: Entry, showingUnreadOnly?: boolean }) => {\n    const styles = useStyles();\n\n    const visualUrl = getEntryVisualUrl(props.entry);\n    const subheader = getEntryByline(props.entry);\n    const summary = getEntrySummary(props.entry);\n\n    // Tint unread articles if and only if they are read and only unread articles are meant to be displayed.\n    const tintGray = !props.entry.unread && props.showingUnreadOnly;\n\n    return <Paper className={styles.paper}>\n            <Card className={styles.card}>\n                <CardHeader\n                    title={props.entry.title}\n                    subheader={subheader}/>\n\n                {visualUrl && <CardMedia\n                    src={visualUrl}\n                    component='img'\n                    title=\"Visual\"\n                    />}\n                {summary && <CardContent>\n                    <Typography component=\"small\">\n                        <div dangerouslySetInnerHTML={{ __html: summary }}></div>\n                    </Typography>\n                </CardContent>}\n            </Card>\n            {tintGray && <div className={styles.tint}></div>}\n        </Paper>;\n}","import { store as s } from 'react-recollect';\nimport { Stream } from '../model/stream';\nimport { Subscription } from '../model/subscription';\nimport { StoreDef, StoreStream } from '../types/RecollectStore';\nimport { Entry } from '../model/entry';\nimport { getUncategorizedId, getSavedId } from '../api/streams';\nimport { getStore } from '../hooks/store';\nimport { saveChildren, loadStore } from './persister';\nimport { loadSettings } from '../actions/settings';\nconst store = s as StoreDef;\n \nexport const initStore = () => {\n    store.streams = {};\n    store.entries = {};\n    store.updating = {\n        categories: false,\n        profile: false,\n    };\n    store.settings = loadSettings();\n    store.current = {\n    };\n\n    loadStore();\n\n    // Include our fake stream by default.\n    // setAllStreams(store.profile.id, require('../fakeStream.json'));\n    // store.collections = require('../fakeCollections.json');\n}\n\nexport const setStream = (stream: Stream) => {\n    const entryUpdate = stream.items.reduce((prev, next) => ({\n        ...prev,\n        [next.id]: next\n    }), {});\n\n    store.entries = {\n        ...store.entries,\n        ...entryUpdate\n    };\n\n    store.streams[stream.id] = {\n        ...stream,\n        items: stream.items.map(i => i.id),\n        lastFetched: Date.now()\n    };\n}\n\nexport const getStream = (streamId: string): Stream => {\n    const store = getStore();\n    const stream = store.streams[streamId];\n    if (!stream) return;\n    return {\n        ...stream,\n        items: stream.items\n            .map(i => store.entries[i])\n            .filter(e => e)\n            .filter(e => e.unread || !store.settings.unreadOnly)\n    };\n}\n\nexport const getTaggedEntriesAsStream = (tag: string): Stream => {\n    const store = getStore();\n    return {\n        id: tag,\n        title: tag,\n        items: Object.values(store.entries)\n            .filter(e => e.unread || !store.settings.unreadOnly)\n    }\n}\n\nexport const setAllStreams = (profileId: string, allStream: Stream) => {\n    const uncategorizedId = getUncategorizedId(profileId);\n    const savedId = getSavedId(profileId);\n\n    const entryUpdate: { [id: string]: Entry } = {};\n    const streamUpdate = {\n        [allStream.id]: {\n            ...allStream,\n            items: allStream.items.map(i => i.id),\n            lastFetched: Date.now()\n        },\n        [uncategorizedId]: {\n            id: uncategorizedId,\n            title: \"Uncategorized\",\n            items: [],\n            lastFetched: 0\n        },\n        [savedId]: {\n            id: savedId,\n            title: \"Saved for later\",\n            items: [],\n            lastFetched: 0\n        }\n    };\n\n    for (const entry of allStream.items) {\n        entryUpdate[entry.id] = entry;\n\n        // Add to uncategorized.\n        if (!entry.categories || entry.categories.length === 0) {\n            streamUpdate[uncategorizedId].items.push(entry.id);\n            continue;\n        }\n        \n        // Add to all categories we pretend to have.\n        for (const category of entry.categories) {\n            // If we haven't made a stream for this category, create one.\n            if (!streamUpdate[category.id]) {\n                const oldStream = store.streams[category.id];\n\n                streamUpdate[category.id] = {\n                    id: category.id,\n                    title: category.label,\n                    items: [],\n                    lastFetched: oldStream ? oldStream.lastFetched : 0\n                }\n            }\n\n            streamUpdate[category.id].items.push(entry.id);\n        }\n    }\n\n    // Deduplicate items.\n    for (const category of Object.values(streamUpdate)) {\n        category.items = Array.from(new Set(category.items));\n    }\n\n    store.entries = {\n        ...store.entries,\n        ...entryUpdate\n    };\n\n    store.streams = {\n        ...store.streams,\n        ...streamUpdate\n    }\n\n    Promise.all([\n        saveChildren('streams', streamUpdate),\n        saveChildren('entries', entryUpdate)\n    ]);\n}","import { Store } from \"react-recollect\";\nimport { getStore } from \"../hooks/store\";\nimport { getAllId, getStream } from \"../api/streams\";\nimport { updateProfile } from \"./profile\";\nimport { setAllStreams } from \"../services/store\";\n\nexport const updateStreams = async (streamId?: string, unreadOnly: boolean = false) => {\n    if (!getStore().profile)\n        await updateProfile();\n\n    streamId = streamId || getAllId(getStore().profile.id);\n    if (getStore().updating[streamId]) return;\n    getStore().updating[streamId] = true;\n\n    try {\n        const stream = await getStream(streamId, 'contents', { unreadOnly });\n\n        // TODO: We should have a better set all streams method.\n        setAllStreams(getStore().profile.id, stream);\n    } catch (error) {\n        window.snackHelper.enqueueSnackbar(\"Unable to update stream. You appear to be offline.\")\n    }\n    getStore().updating[streamId] = false;\n}","import { makeStyles } from \"@material-ui/styles\";\nimport * as React from 'react';\n\nconst useStyles = makeStyles({\n    root: {\n        display: 'flex',\n        justifyContent: 'center'\n    }\n});\n\nexport default props => {\n    const styles = useStyles();\n\n    return <div className={styles.root}>\n        {props.children}\n    </div>\n}","import * as React from 'react';\nimport { useRef, useState } from 'react';\nimport { debounce } from '../services/debounce';\nimport { RootRef } from '@material-ui/core';\n\ninterface Props {\n    getContainer: (node: HTMLElement) => HTMLElement;\n    children: (visible: boolean) => React.ReactNode;\n}\n\nconst isAbove = (container: HTMLElement, element: HTMLElement) => {\n    if (!container || !element) return false;\n\n    const elementRect = element.getBoundingClientRect();\n    const containerRect = container.getBoundingClientRect();\n\n    return elementRect.bottom < containerRect.top;\n}\nexport const ScrollVisibility = (props: Props) => {\n    const elementRef = useRef<HTMLDivElement>(null);\n    const [scrollContainer, setScrollContainer] = useState(null);\n    const [scrollHandler, setScrollHandler] = useState(null);\n    const [above, setAbove] = useState(false);\n\n    React.useEffect(() => {\n        if (!elementRef || !elementRef.current) return;\n\n        // TODO: This doesn't seem to be removing the handler?\n        if (scrollContainer && scrollHandler)\n            scrollContainer.removeEventListener('scroll', scrollHandler);\n        \n        const handler = e => {\n            const newAbove = isAbove(scrollContainer, elementRef.current);\n\n            // Debouncing isn't working, don't trigger rerender.\n            if (newAbove !== above) setAbove(newAbove);\n        };\n\n        const debounced = debounce(handler, 1000);\n\n        const container = props.getContainer(elementRef.current);\n        setScrollContainer(container);\n        setScrollHandler(debounced);\n        container.addEventListener('scroll', debounced, { passive: true })\n        \n        return () => {\n            scrollContainer && scrollHandler && scrollContainer.removeEventListener('scroll', scrollHandler);\n        }\n    }, [props.getContainer, elementRef]);\n\n\n\n    return <RootRef rootRef={elementRef}>\n        {props.children(!above)}\n    </RootRef>;\n}","import { makeStyles } from \"@material-ui/styles\";\nimport * as React from 'react';\n\nconst useStyles = makeStyles({\n    stickyHeader: {\n        position: 'sticky',\n        top: 0\n    }\n});\n\ninterface Props extends React.HTMLProps<HTMLDivElement> {\n}\n\nexport default (props: Props) => {\n    const styles = useStyles();\n    const { children, className, ...rest } = props;\n\n    return <div className={`${className} ${styles.stickyHeader}`} {...rest}>\n        {children}\n    </div>;\n}","import { CircularProgress, Grid, IconButton, Switch, FormControlLabel, LinearProgress } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport React, { useEffect, useMemo } from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router';\nimport EntryCard from \"./EntryCard\";\nimport { useStream } from './hooks/stream';\nimport { useStore, isUpdating } from './hooks/store';\nimport AppBarButton from './components/AppBarButton';\nimport { Refresh } from '@material-ui/icons';\nimport { updateStreams } from './actions/stream';\nimport { getStream } from './services/store';\nimport Centre from './components/Centre';\nimport { Entry } from './model/entry';\nimport { History } from 'history';\nimport { ScrollVisibility } from './components/ScrollVisibility';\nimport { setUnread } from './actions/marker';\nimport StickyHeader from './components/StickyHeader';\n\nconst useStyles = makeStyles({\n  root: {\n  },\n  loadingButton: {\n    color: 'white !important'\n  },\n  loader: {\n    marginBottom: \"10px\",\n  },\n  header: {\n    top: '-10px',\n    zIndex: 1000,\n    margin: '-10px -10px 10px -10px'\n  }\n});\n\ntype Props = RouteComponentProps<any> & {\n  id: string;\n  active: boolean;\n};\n\nconst MarkEntryAsRead = (props: { entry: Entry }) => {\n  useEffect(() => {\n    if (!props.entry || !props.entry.unread) return;\n\n    setUnread(props.entry, false);\n  }, [props.entry && props.entry.id])\n\n  return null;\n}\n\nexport default withRouter((props: Props) => {\n  const streamId = props.id;\n  const stream = useStream(streamId);\n\n  useEffect(() => {\n    if (!streamId || stream && stream.id !== streamId) return;\n    updateStreams(streamId);\n  }, [streamId]);\n\n  return <EntriesViewer\n    entries={stream && stream.items}\n    id={streamId}\n    history={props.history}\n    active={props.active} />\n});\n\nconst EntriesViewer = (props: { entries: Entry[], id: string, active: boolean, history: History }) => {\n  const store = useStore();\n  const styles = useStyles();\n  const markScrolledAsRead = store.settings.markScrolledAsRead;\n\n  const loading = !props.entries || isUpdating(props.id);\n\n  // Only recalculate suitable entries if something important changes,\n  // not only if we mark articles as read.\n  const suitableEntries = useMemo(() => props.entries\n    ? props.entries.filter(e => e && (e.unread || !store.settings.unreadOnly))\n    : [],\n    [props.entries && props.entries.length,\n    props.id,\n    store.settings.unreadOnly,\n    store.updating[props.id]]);\n\n  const unreadCount = useMemo(() => suitableEntries.filter(e => e.unread).length, [props.entries]);\n  const readProgress = (1 - unreadCount / suitableEntries.length) * 100;\n  return <div className={styles.root}>\n    {store.settings.unreadOnly\n      && !!suitableEntries.length\n      && <StickyHeader className={styles.header}>\n        <LinearProgress variant='determinate' value={readProgress} color='secondary' />\n      </StickyHeader>}\n    {loading && <Centre>\n      <CircularProgress className={styles.loader} />\n    </Centre>}\n    <Grid spacing={24} container justify='center' wrap='wrap'>\n      {suitableEntries\n        .map(e => <ScrollVisibility key={e.id}\n          getContainer={n => n.parentElement.parentElement.parentElement}>\n          {(visible) => <Grid item lg={3} md={6} sm={6} xs={12} onClick={() => props.history.push(`/entries/${e.id}`)}>\n            <EntryCard entry={e} showingUnreadOnly={store.settings.unreadOnly} />\n            {!visible && markScrolledAsRead && <MarkEntryAsRead entry={e} />}\n          </Grid>}\n        </ScrollVisibility>)}\n    </Grid>\n    {props.active && <>\n      <AppBarButton>\n        <IconButton disabled={loading} onClick={() => updateStreams(props.id)}>\n          <Refresh />\n        </IconButton>\n      </AppBarButton>\n      <AppBarButton>\n        <FormControlLabel\n          control={<Switch checked={store.settings.unreadOnly} onClick={() => store.settings.unreadOnly = !store.settings.unreadOnly} />}\n          label=\"Unread\" />\n      </AppBarButton>\n    </>}\n  </div>\n}","import { useEffect } from \"react\";\nimport { getStream, getAllStreams } from \"../api/streams\";\nimport { Entry } from \"../model/entry\";\nimport { Stream } from \"../model/stream\";\nimport { setAllStreams } from \"../services/store\";\nimport { useStore } from \"./store\";\nimport { executeOnce } from \"./promise\";\nimport { useProfile } from \"./profile\";\n\nexport const useStreams = () => {\n    const store = useStore();\n    const profile = useProfile();\n\n    const streams = store.streams;\n\n    // If we haven't the streams, get them from the internet.\n    executeOnce((profileId) => {\n        if (!profileId) return;\n\n        return !streams && getAllStreams(profileId).then(streams => setAllStreams(profileId, streams));\n    }, profile && profile.id);\n\n    return streams;\n}\n\nexport const useStream = (streamId: string): Stream => {\n    const store = useStore();\n    if (!streamId) return;\n    \n    const streams = store.streams;\n\n    // If it's a feed\n    if (streamId.startsWith('feed/')) {\n        return {\n            id: streamId,\n            items: Object.values(store.entries).filter(e => e.origin.streamId === streamId),\n            title: 'Feed'\n        };\n    }\n\n    // If it's a tag\n    if (streamId.includes('/tag/')) {\n        return {\n            id: streamId,\n            items: Object.values(store.entries).filter(e => e.tags && e.tags.some(t => t.id === streamId)),\n            title: 'Tag'\n        };\n    }\n    const stream = streams[streamId];\n\n    return stream\n        ? {\n            ...stream,\n            items: stream.items.map(i => store.entries[i])\n        }\n        : undefined;\n}\n\nexport const useEntries = (): Entry[] => {\n    const store = useStore();\n    useStreams();\n\n    return Object.values(store.entries);\n}\n\nexport const useEntry = (entryId: string): Entry => {\n    const store = useStore();\n    useStreams();\n\n    return store.entries[entryId];\n}\n\nexport const useFeeds = (feedId: string): Entry[] => {\n    const entries = useEntries();\n    return entries.filter(e => e.origin.streamId === feedId);\n}","import { MuiThemeProvider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport { SnackbarProvider } from 'notistack';\nimport React, { useEffect, useMemo } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { getAllId } from './api/streams';\nimport AppBar from './AppBar';\nimport { SnackbarHelper } from './components/SnackbarHelper';\nimport EntryViewer from './EntryViewer';\nimport { useProfile } from './hooks/profile';\nimport { useStore } from './hooks/store';\nimport RouteManager, { AppRoute } from './RouteManager';\nimport SettingsPage from './SettingsPage';\nimport StreamViewer from './StreamViewer';\nimport { buildTheme } from './theme';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100vw',\n    height: '100vw'\n  }\n});\n\nconst routes: AppRoute[] = [\n  {\n    prefix: '/settings/',\n    render: () => <SettingsPage />\n  },\n  {\n    prefix: '/stream/',\n    render: (id, active) => <StreamViewer id={id} active={active} />\n  },\n  {\n    prefix: '/entries/',\n    render: (id, active) => <EntryViewer id={id} active={active} />\n  }\n];\n\nexport const App = (props) => {\n  const styles = useStyles();\n  const store = useStore();\n  const profile = useProfile();\n\n  const theme = useMemo(() => {\n    return buildTheme(store.settings);\n  }, [store.settings.fontSize]);\n\n  useEffect(() => {\n    if (store.current['/stream/'] || !profile) return;\n\n    store.current['/stream/'] = getAllId(profile.id);\n  }, [store.current, profile]);\n\n  return <BrowserRouter>\n    <MuiThemeProvider theme={theme}>\n      <SnackbarProvider>\n        <SnackbarHelper/>\n        <div className={styles.root}>\n          <AppBar />\n          <RouteManager routes={routes} />\n        </div>\n      </SnackbarProvider>\n    </MuiThemeProvider>\n  </BrowserRouter>;\n};\n\nexport default App;\n","import { createMuiTheme } from \"@material-ui/core\";\nimport { Settings } from \"./types/RecollectStore\";\n\nexport const buildTheme = (settings: Settings) => createMuiTheme({\n    palette: {\n        type: settings.darkMode ? 'dark' : 'light',\n        primary: {\n            main: '#2BB24C'\n        },\n    },\n    typography: {\n        fontSize: 8 + (settings.fontSize * 2)\n    }\n});","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { initStore } from './services/store';\nimport * as serviceWorker from './serviceWorker';\n\n// Make sure our store is initialized.\ninitStore();\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}